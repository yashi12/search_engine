{"version":3,"sources":["action/types.js","action/alert.js","utils/setAuthToken.js","action/auth.js","components/Navbar.js","action/profile.js","components/Spinner.js","components/ProfileExperience.js","components/Profile.js","reducers/profile.js","components/AccountDetails.js","reducers/post.js","components/Posts.js","action/post.js","components/Feed.js","components/LogIn.js","components/Register.js","components/AddPost.js","components/route/PrivateRoute.js","components/AddExperience.js","reducers/auth.js","components/ShowProfile.js","components/SearchPost.js","components/SearchProfile.js","components/Profiles.js","components/Result.js","components/SearchNew.js","action/question.js","reducers/question.js","components/Questions.jsx","components/QuestionSimilarityContinue.jsx","components/AskQuestion.jsx","components/QuestionsFeed.jsx","components/MyQuestions.jsx","action/answers.js","components/Comments.jsx","components/AnswerItem.jsx","components/QuestionAnswerItem.jsx","components/QuestionDiscussion.jsx","components/SearchItem.jsx","components/UpdateQuestion.jsx","components/ProfileInfo.jsx","components/SearchSimilarQuestion.jsx","reducers/alert.js","reducers/answers.js","reducers/index.js","components/Store.js","components/Toast.jsx","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","UPDATE_PROFILE","GET_PROFILE","GET_PROFILE_BY_ID","GET_PROFILES","PROFILE_ERROR","CLEAR_PROFILE","ACCOUNT_DELETED","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","SEARCH_POST","SEARCH_PROFILE","SEARCH_QUERY","SEARCH_ERROR","SEARCH_QUESTIONS","SIMILAR_QUESTIONS","ASK_QUESTION","DELETE_QUESTION","UPDATE_QUESTION","QUESTION_ERROR","GET_QUESTIONS","GET_QUESTION","ADD_ANSWER","UPDATE_ANSWER","DELETE_ANSWER","GET_ANSWER","LIKE_ANSWER","ANSWER_ERROR","ADD_COMMENT","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","process","res","console","log","data","Navbar","auth","isAuthenticated","loading","logout","authLinks","className","href","role","data-toggle","aria-haspopup","aria-expanded","to","onClick","guestLinks","data-target","aria-controls","aria-label","prototype","PropTypes","func","isRequired","object","connect","state","window","confirm","getCurrentProfile","response","status","error","errors","forEach","Spinner","props","ProfileExperience","experience","company","title","from","current","format","date","style","display","justifyContent","alignItems","value","readOnly","checked","Profile","user","profile","useEffect","hasOwnProperty","name","count","isHalf","edit","size","rating","activeColor","githubusername","target","linkedIn","twitter","map","skill","length","scope","_id","initialState","profiles","searchProfiles","query","skills","bio","createProfile","formData","history","config","post","push","statusText","useState","github","linked_in","setFormData","displaySocialInputs","toggleSocialInputs","profileData","key","social","Array","isArray","join","onChange","e","onSubmit","preventDefault","htmlFor","aria-describedby","placeholder","rows","maxLength","posts","searchPostArr","Posts","showActions","addLike","deletePost","image","width","height","src","alt","userName","dangerouslySetInnerHTML","__html","text","tag","xmlns","fill","viewBox","d","likeCount","defaultProps","postId","put","likes","delete","getPosts","LogIn","login","email","password","setData","method","required","autoComplete","bool","header","body","Register","register","confirmPassword","propType","addPost","setImage","setValue","FormData","append","split","item","encType","file","files","theme","Component","component","rest","render","addExperience","toDateDisabled","toggleDisabled","useHistory","_","disabled","getItem","ShowProfile","searchPosts","topic","setTopic","getProfilesBySkill","getProfiles","dat","udemy","coursera","youtube","blog","related","prerequisites","UdemyData","instructor","link","CourseraData","level","YoutubeData","searchQuery","getQuestions","then","err","getQuestionDiscussion","answers","catch","searchSimilarQuestion","similarQuesArray","deleteQuestion","askQuestion","questions","question","searchQuestionArr","similarQuestionArr","Questions","search","media","description","tags","category","similarQuestions","questionData","Submit","fuse","Fuse","keys","filteredData","setFilteredData","wordEntered","setWordEntered","similarityToggle","setSimilarityToggle","setDescription","for","minLength","event","searchWord","characterResults","character","tagName","slice","alert","filter","addAnswer","userData","Comments","comments","element","deleteAnswer","answerId","likeAnswer","ansId","addComment","comment","updateAnswer","GlobalId","answerToggle","setAnswerToggle","updateToggle","setUpdateToggle","setAnswerId","commentId","setCommentId","updateData","setUpdateData","answerData","setAnswerData","commentToggle","setCommentToggle","commentData","setCommentData","UpdateAnswer","AddComment","Update","getAnswer","tabIndex","result","class","Delete","match","params","searchQuestions","spinnerToggle","setSpinnerToggle","updateQuestion","tagList","setQuestion","setCategory","setTag","onChangeTag","onChangeCategory","getProfileById","userId","answer","combineReducers","action","setItem","removeItem","repos","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Toast","toast","success","position","autoClose","warning","closeOnClick","alerts","App","exact","path","AccountDetails","Feed","SearchPost","SearchProfile","Profiles","SearchNew","AddPost","AskQuestion","QuestionsFeed","MyQuestions","QuestionDiscussion","UpdateQuestion","ProfileInfo","SearchItem","SearchSimilarQuestion","AddExperience","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2853cd3a.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\nexport const USER_LOADED = 'USER_LOADED'\r\nexport const AUTH_ERROR = 'AUTH_ERROR'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'\r\nexport const GET_PROFILE = 'GET_PROFILE'\r\nexport const GET_PROFILE_BY_ID = 'GET_PROFILE_BY_ID'\r\nexport const GET_PROFILES = 'GET_PROFILES'\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR'\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE'\r\nexport const CLEAR_PROFILES = 'CLEAR_PROFILES'\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED'\r\nexport const GET_POSTS = 'GET_POSTS'\r\nexport const POST_ERROR = 'POST_ERROR'\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const SEARCH_POST = 'SEARCH_POST'\r\nexport const SEARCH_PROFILE = 'SEARCH_PROFILE'\r\nexport const SEARCH_QUERY = 'SEARCH_QUERY'\r\nexport const SEARCH_ERROR = 'SEARCH_ERROR'\r\nexport const SEARCH_QUESTIONS = 'SEARCH_QUESTIONS'\r\nexport const SIMILAR_QUESTIONS = 'SIMILAR_QUESTIONS'\r\nexport const ASK_QUESTION = 'ASK_QUESTION'\r\nexport const DELETE_QUESTION = 'DELETE_QUESTION'\r\nexport const UPDATE_QUESTION = 'UPDATE_QUESTION'\r\nexport const QUESTION_ERROR = 'QUESTION_ERROR'\r\nexport const GET_QUESTIONS = 'GET_QUESTIONS'\r\nexport const GET_QUESTION = 'GET_QUESTION'\r\nexport const ADD_ANSWER = 'ADD_ANSWER'\r\nexport const UPDATE_ANSWER = 'UPDATE_ANSWER'\r\nexport const DELETE_ANSWER = 'DELETE_ANSWER'\r\nexport const GET_ANSWER = 'GET_ANSWER'\r\nexport const LIKE_ANSWER = 'LIKE_ANSWER'\r\nexport const ANSWER_ERROR = 'ANSWER_ERROR'\r\nexport const ADD_COMMENT = 'ADD_COMMENT'","import {v4 as uuid} from 'uuid' ;\r\nimport { SET_ALERT, REMOVE_ALERT } from './types'\r\n\r\nexport const setAlert = (msg, alertType, timeout = 2000) => dispatch => {\r\n    // uuid is a module to generate random ids\r\n    const id  = uuid() ;\r\n    dispatch({\r\n        type : SET_ALERT,\r\n        payload: {msg, alertType, id}\r\n    })\r\n\r\n    setTimeout(() => dispatch({type: REMOVE_ALERT,payload:id}), 3000, timeout)\r\n}","import axios from 'axios'\r\n\r\nconst setAuthToken = token => {\r\n\tif (token) {\r\n\t\taxios.defaults.headers.common['x-auth-token'] = token\r\n\t}\r\n\telse {\r\n\t\tdelete axios.defaults.headers.common['x-auth-token']\r\n\r\n\t}\r\n}\r\n\r\nexport default setAuthToken","import axios from 'axios'\r\nimport { setAlert } from './alert'\r\nimport {\r\n    REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED,\r\n    AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT,\r\n    CLEAR_PROFILE\r\n} from './types'\r\nimport setAuthToken from '../utils/setAuthToken'\r\n\r\n// const API = 'http://localhost:3000'\r\n\r\n// Load User\r\n\r\nexport const loadUser = () => async dispatch => {\r\n    if (localStorage.token) {\r\n        setAuthToken(localStorage.token)\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API}/api/auth`)\r\n\r\n        console.log(\"result\",res);\r\n        dispatch ({\r\n            type : USER_LOADED,\r\n            payload : res.data\r\n\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Register User\r\nexport const register = ({name, email, password}) => async dispatch => {\r\n    const config = {\r\n        header: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    // const body = JSON.stringify( {name, email, password} )\r\n    const body = {name, email, password}\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API}/api/users`, body, config)\r\n\r\n        dispatch ({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loadUser())\r\n    }\r\n    catch(err) {\r\n        const error = err.response.data.errors;\r\n\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch ({\r\n            type: REGISTER_FAIL\r\n\r\n        })\r\n    }\r\n}\r\n\r\n// Log In User\r\nexport const login = ({ email, password}) => async dispatch => {\r\n    const config = {\r\n        header: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    // const body = JSON.stringify( {name, email, password} )\r\n    const body = {email, password}\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API}/api/auth`, body, config)\r\n        dispatch ({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loadUser())\r\n    }\r\n    catch(err) {\r\n        console.log(\"error\",err);\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch ({\r\n            type: LOGIN_FAIL\r\n\r\n        })\r\n    }\r\n}\r\n\r\n// Log out\r\n\r\nexport const logout = () => dispatch => {\r\n    if (window.confirm('Are you sure ?')){\r\n        dispatch({\r\n            type: CLEAR_PROFILE\r\n        })\r\n        dispatch({\r\n            type: LOGOUT\r\n        })\r\n        dispatch(setAlert('Logged Out', 'success'))\r\n    }\r\n}","import { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { logout } from '../action/auth'\r\nimport React, { Fragment } from 'react'\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n\r\n    // These links will be displayed once the user has logged in\r\n    const authLinks = (\r\n        <ul className=\"navbar navbar-nav mr-auto w-100\">\r\n            {/* <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/search\">Learn</Link>\r\n            </li> */}\r\n            <li className=\"nav-item dropdown active\">\r\n                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    V1\r\n                </a>\r\n                <div className=\"dropdown-menu\" >\r\n                    <Link className=\"dropdown-item\" to=\"/feed\">Feed</Link>\r\n                    <Link className=\"dropdown-item\" to=\"/addPost\">Add Post</Link>\r\n                    <Link className=\"dropdown-item\" to=\"/searchPost\">Search Post</Link>\r\n                    <Link className=\"dropdown-item\" to=\"/profiles\">Find Devs</Link>\r\n                    <Link className=\"dropdown-item\" to=\"/searchProfile\">Search Profile</Link>\r\n                </div>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/profile\">Profile</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/searchQuestion\">Search Question</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/similarQuestion\">Search Similar Question</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/askQuestion\">Ask Question</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/questionsFeed\">Questions Feed</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/myQuestions\">My Questions</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" onClick={logout} >Log Out</Link>\r\n            </li>\r\n        </ul>\r\n    )\r\n\r\n    // These links will be displayed to everyone\r\n    const guestLinks = (\r\n        <nav className=\"navbar navbar-nav w-100 navbar-dark\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/login\">Log In</Link>\r\n            </li>\r\n        </nav>\r\n    )\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\">\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">CodeUp</Link>\r\n\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    {!loading && (<Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>)}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.prototype = {\r\n    logout: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar)","import axios from 'axios'\r\nimport {setAlert} from './alert'\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    ACCOUNT_DELETED,\r\n    GET_PROFILES,\r\n    CLEAR_PROFILE,\r\n    CLEAR_PROFILES, SEARCH_PROFILE, SEARCH_QUERY, SEARCH_ERROR, GET_PROFILE_BY_ID\r\n} from './types'\r\n\r\n// const API = 'http://localhost:3000'\r\n\r\n// Get current user\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        console.log(\"enter get profile\")\r\n        const res = await axios.get(`${process.env.REACT_APP_API}/api/profile/me`)\r\n        console.log(\"res\", res)\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        console.log(\"error profile\",err.response)\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response,\r\n                status: err.response\r\n            }\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILES\r\n    })\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API}/api/profile`)\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response,\r\n                status: err.response\r\n            }\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Get profiles by skill filter\r\nexport const getProfilesBySkill = skill => async dispatch => {\r\n    console.log(\"skill in action\", skill);\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API}/api/profile/filter/${skill}`)\r\n\r\n        console.log(\"res\",res.data);\r\n        dispatch({\r\n            type: SEARCH_PROFILE,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        console.log(\"err profile filter\",err);\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Get profile by ID\r\n\r\nexport const getProfileById = userId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API}/api/profile/user/${userId}`)\r\n        dispatch({\r\n            type: GET_PROFILE_BY_ID,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        console.log(\"profile by id error : \", err)\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Create or Update\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        // const {githubusername, linkedIn, twitter, bio, skills} = formData;\r\n        //\r\n        // let skillData = skills.split(',');\r\n        // const body = {githubusername, linkedIn, twitter, bio, skills:skillData};\r\n        console.log(\"form body\", formData)\r\n        const res = await axios.post(`${process.env.REACT_APP_API}/api/profile`, formData, config)\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'))\r\n\r\n        if (!edit) {\r\n            history.push('./profile')\r\n        }\r\n    } catch (err) {\r\n        const error = err.response.data.errors;\r\n\r\n        if (error) {\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// Add experience\r\nexport const addExperience = (formData) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        console.log(\"formdata\", formData);\r\n        const res = await axios.put(`${process.env.REACT_APP_API}/api/profile/experience`, formData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Experience added', 'success'))\r\n        \r\n    } catch (err) {\r\n        const error = err.response.data.errors;\r\n\r\n        if (error) {\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Education added', 'success'))\r\n\r\n        history.push('/profile')\r\n\r\n    } catch (err) {\r\n        const error = err.response.data.errors;\r\n\r\n        if (error) {\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// Delete experience\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`${process.env.REACT_APP_API}/api/profile/delete`)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Experience removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Delete account and profile\r\nexport const deleteAccount = id => async dispatch => {\r\n    if (window.confirm('Are you sure ?')) {\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API}/api/profile`)\r\n\r\n            dispatch({\r\n                type: CLEAR_PROFILE\r\n            })\r\n            dispatch({\r\n                type: ACCOUNT_DELETED\r\n            })\r\n\r\n            dispatch(setAlert('ACCOUNT DELETED', 'success'))\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {msg: err.response.statusText, status: err.response.status}\r\n            })\r\n            const error = err.response.data.errors;\r\n            if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const searchQuery = topic => async dispatch => {\r\n    const config = {\r\n        header: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = {topic}\r\n    try {\r\n        console.log(\"enter get search\", body)\r\n        const res = await axios.post(`${process.env.REACT_APP_API}/api/skill`, body, config)\r\n        console.log(\"res\", res.data)\r\n        dispatch({\r\n            type: SEARCH_QUERY,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SEARCH_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst Spinner = props => {\r\n    console.log(\"spinner\");\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\"/>\r\n            <div className=\"spinner-border text-success\" role=\"status\">\r\n            <br />\r\n            <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"col\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nSpinner.propTypes = {\r\n\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({experience: { company, title, to, from, current }}) => {\r\n    return (\r\n\r\n            <tbody>\r\n                <tr>\r\n                    <td><b>{company}</b></td>\r\n                    <td>{title}</td>\r\n                    <td><Moment format=\"YYYY/MM/DD\" date={from}  /></td>\r\n                    <td >{ current ?  <p> - </p>  : <Moment format=\"YYYY/MM/DD\" date={to}/>}</td>\r\n                    <td className=\"form-check\" style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\"\r\n                    }}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" readOnly checked={current ? 'checked' : ''}/>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n    )\r\n}\r\n\r\nProfileExperience.propTypes = {\r\n    experience: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileExperience\r\n","import {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {getCurrentProfile} from '../action/profile'\r\nimport React, {Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Spinner from './Spinner'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport ProfileExperience from '../components/ProfileExperience'\r\nimport { GrUpdate, GrUserExpert } from 'react-icons/gr'\r\nimport { MdWork } from 'react-icons/md'\r\nimport { FaGithub, FaLinkedin, FaTwitter } from 'react-icons/fa'\r\nimport { RiProfileLine, RiErrorWarningLine } from 'react-icons/ri'\r\nimport ReactStars from \"react-rating-stars-component\"\r\n\r\nconst Profile = ({\r\n                     getCurrentProfile,\r\n                     auth: {user},\r\n                     profile: {profile, loading}\r\n                 }) => {\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile()\r\n    }, [])\r\n    console.log(\"profile log:\", profile);\r\n\r\n\r\n    // const {githubusername, linkedIn, twitter, bio, skills} = profile;\r\n\r\n    return (profile === null ? <Spinner/> : !profile.hasOwnProperty(\"msg\") ? (<Fragment>\r\n        <div>\r\n            <br/>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\"/>\r\n                <div className=\"col-6 card shadow p-3 mb-5 bg-light rounded\">\r\n\r\n                    <br/>\r\n                    <h4><CgProfile/> {profile[\"user\"].name} \r\n                    <ReactStars\r\n                        count={5}\r\n                        isHalf={true}\r\n                        edit={false}\r\n                        size={24}\r\n                        value={profile[\"user\"].rating.rating}\r\n                        activeColor=\"#5cb85c\"\r\n                    /></h4>\r\n                    <div className=\"row card-body\">\r\n                        {profile[\"social\"] ?\r\n                            <Fragment>\r\n                                <div className=\"col\">\r\n                                    <h5><FaGithub/> Github</h5>\r\n                                    {profile[\"social\"].githubusername ?\r\n                                        <a href={\"https://github.com/\"+profile[\"social\"].githubusername} target=\"_blank\">\r\n                                        {\"https://github.com/\"+profile[\"social\"].githubusername}</a> : <div/>}\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <h5><FaLinkedin/> Linked In</h5>\r\n                                    {profile[\"social\"].linkedIn ?\r\n                                        <a href={\"https://github.com/\"+profile[\"social\"].linkedIn} target=\"_blank\">\r\n                                        {\"https://github.com/\"+profile[\"social\"].linkedIn}</a> : <div/>}\r\n                                        \r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <h5><FaTwitter/> Twitter</h5>\r\n                                    {profile[\"social\"].twitter ?\r\n                                        <a href={\"https://github.com/\"+profile[\"social\"].twitter} target=\"_blank\">\r\n                                        {\"https://github.com/\"+profile[\"social\"].twitter}</a> : <div/>}\r\n                                       \r\n                                </div>\r\n                            </Fragment>\r\n                            : <div/>}\r\n                    </div>\r\n                    <div className=\"form-group card-body\">\r\n                        <h5><RiProfileLine/> Bio</h5>\r\n                        {profile[\"bio\"] ?\r\n                            <p>{profile[\"bio\"]}</p> : <div/>}\r\n                    </div>\r\n                    <div className=\"form-group card-header\">\r\n                        <h5><GrUserExpert/> Skills</h5>\r\n                        {profile[\"skills\"].map((skill) => (\r\n                            <h5>\r\n                                <span className=\"badge badge-warning\">{skill}</span></h5>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"form-group card-group\">\r\n\r\n                        {profile[\"experience\"].length > 0 ? (\r\n                            <Fragment>\r\n                                <h5>Experience</h5>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Company</th>\r\n                                        <th scope=\"col\">Designation</th>\r\n                                        <th scope=\"col\">Start</th>\r\n                                        <th scope=\"col\">End</th>\r\n                                        <th scope=\"col\">Current</th>\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                    {profile[\"experience\"].map((experience) => (\r\n                                        <ProfileExperience\r\n                                            key={experience._id}\r\n                                            experience={experience}\r\n                                        />\r\n                                    ))}\r\n                                </table>\r\n                            </Fragment>\r\n\r\n                        ) : (\r\n                            <h4>No experience credentials <RiErrorWarningLine/></h4>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"row card-footer\">\r\n\r\n                        <div className=\"col\">\r\n                            <Link to='/update'>\r\n                                <button type=\"button\" className=\"btn btn-primary\"><span><GrUpdate/></span> Update Profile</button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Link to='/addExperience'>\r\n                                <button className=\"btn btn-primary\"><span><MdWork/></span> Add Experience</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </Fragment>) : <div>Profile does not exist\r\n        <div className=\"row\">\r\n\r\n            <div className=\"col\">\r\n                <Link to='/update'>\r\n                    <button type=\"button\" className=\"btn btn-primary\"><span><GrUpdate/></span> Update Profile</button>\r\n                </Link>\r\n            </div>\r\n            <div className=\"col-10\">\r\n\r\n            </div>\r\n        </div></div>)\r\n\r\n}\r\n\r\nProfile.prototype = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCurrentProfile})(Profile)\r\n","import {\r\n    GET_PROFILE,\r\n    GET_PROFILE_BY_ID,\r\n    PROFILE_ERROR,\r\n    SEARCH_PROFILE,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE,\r\n    GET_PROFILES,\r\n    SEARCH_QUERY, SEARCH_ERROR\r\n} from \"../action/types\"\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    loading: true,\r\n    error: {},\r\n    searchProfiles: [],\r\n    query: []\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload } = action\r\n    console.log(\"payload\",payload);\r\n    switch(type){\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            }\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            }\r\n        case SEARCH_PROFILE:\r\n            return {\r\n                ...state,\r\n                searchProfiles: payload,\r\n                loading: false\r\n            }\r\n        case GET_PROFILE_BY_ID:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            }\r\n        case PROFILE_ERROR:\r\n        case SEARCH_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            }\r\n        case SEARCH_QUERY:\r\n            return {\r\n                ...state,\r\n                query: payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport React,{ useState, useEffect } from 'react'\r\nimport { createProfile, getCurrentProfile } from '../action/profile'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport profile from '../reducers/profile'\r\nimport { loadUser } from '../action/auth'\r\n\r\n// State Initialization\r\nconst initialState = {\r\n    company: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    linkedIn: ''\r\n};\r\n\r\nconst AccountDetails = ({ profile:{profile, loading} ,createProfile, getCurrentProfile, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        github: '',\r\n        linked_in:'',\r\n        twitter:'',\r\n        bio:'',\r\n        skills:''\r\n    })\r\n\r\n    // Toggling action\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\r\n\r\n    useEffect( () =>{\r\n        if (!profile) getCurrentProfile();\r\n        if (!loading && profile) {\r\n            const profileData = { ...initialState };\r\n            for (const key in profile) {\r\n                if (key in profileData) profileData[key] = profile[key];\r\n            }\r\n            for (const key in profile.social) {\r\n                if (key in profileData) profileData[key] = profile.social[key];\r\n            }\r\n            if (Array.isArray(profileData.skills))\r\n                profileData.skills = profileData.skills.join(', ');\r\n            setFormData(profileData);\r\n        }\r\n    }, [loading, getCurrentProfile, profile]);\r\n\r\n    const {\r\n        company,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        linkedIn\r\n    } = formData;\r\n\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(\"changed data\",formData);\r\n        createProfile(formData, history, !!profile);\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\"/>\r\n                <div className=\"col-6\">\r\n                    <form onSubmit={onSubmit}>\r\n                        <br/><br/>\r\n                        {/* Handling the toggle action */}\r\n                        <div className=\"row\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={()=>toggleSocialInputs(!displaySocialInputs)}>Add Social</button>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            { displaySocialInputs &&( <div>\r\n                                <br />\r\n                                {/* Taking inputs like Github username, Linked In and Twitter name */}\r\n                                <div className=\"col\">\r\n                                    <label htmlFor=\"githubusername\">Github</label>\r\n                                    <input type=\"text\" id=\"githubusername\" className=\"form-control\" name=\"githubusername\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" onChange={e => onChange(e)} value={githubusername}/>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <label htmlFor=\"linkedin\">Linked In</label>\r\n                                    <input type=\"text\" id=\"linkedin\" className=\"form-control\" name=\"linkedIn\" placeholder=\"Password\" onChange={e => onChange(e)} value={linkedIn}/>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <label htmlFor=\"twitter\">Twitter</label>\r\n                                    <input type=\"text\" id=\"twitter\" className=\"form-control\" name=\"twitter\" placeholder=\"Password\" onChange={e => onChange(e)} value={twitter}/>\r\n                                </div>\r\n                                </div>)}\r\n                        </div>\r\n                        <br />\r\n                        {/* Taking Bio and Skills */}\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-primary\" htmlFor=\"bio\">Bio</label>\r\n                            <textarea name=\"bio\" className=\"form-control\" rows=\"5\" maxLength=\"200\" onChange={e => onChange(e)} value={bio}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-primary\" htmlFor=\"skills\">Skills</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"skills\" placeholder=\"Password\" onChange={e => onChange(e)} value={skills}/>\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                        <br/>\r\n                        <Link className=\"btn btn-light my-1\" to=\"/profile\">\r\n                            Go Back\r\n                        </Link>\r\n                        {/*<button type=\"submit\" className=\"btn btn-primary\"><Link to='/profile'>Submit</Link></button>*/}\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nAccountDetails.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\n// Accessing the profile from the redux state\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\n// Connecting react program with redux\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n    AccountDetails\r\n);","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    SEARCH_POST, SEARCH_QUERY, SEARCH_ERROR\r\n} from '../action/types'\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {},\r\n    searchPostArr: [],\r\n    query: []\r\n\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload} = action\r\n    switch( type){\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            }\r\n        case ADD_POST:\r\n            console.log(\"posts\", state);\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts],\r\n                loading: false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload),\r\n                loading: false\r\n            }\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case SEARCH_POST:\r\n            return {\r\n                ...state,\r\n                searchPostArr: payload,\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((post) => post._id === payload.postId ? { ...post,likes: payload.likes, likeCount:payload.likes.length } :post),\r\n                loading: false \r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {addLike, deletePost} from '../action/post'\r\nimport post from \"../reducers/post\";\r\n\r\nconst Posts = ({addLike, deletePost, auth, post}, showActions) => {\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <br/>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\"/>\r\n                <div className=\"card mb-3 col-8\">\r\n                    <div className=\"row g-0\">\r\n                        <div className=\"col-md-4 mb-3\">\r\n                            {post.image ?\r\n                                <img width=\"300\" height=\"300\"\r\n    src={post.image}\r\n    // src=\"https://media.wired.com/photos/5e59a85635982c0009f6eb8a/1:1/w_1350,h_1350,c_limit/python-popularity.jpg\"\r\n    alt=\"...\"/>\r\n                                : <img width=\"300\" height=\"300\"\r\n    // src={post.image}\r\n    src=\"https://media.wired.com/photos/5e59a85635982c0009f6eb8a/1:1/w_1350,h_1350,c_limit/python-popularity.jpg\"\r\n    alt=\"...\"/>\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"row g-0\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">{post.userName}</h5>\r\n                                    {/* <p className=\"card-text\">{post.text}</p> */}\r\n                                    <div dangerouslySetInnerHTML={{__html: post.text}}></div>\r\n                                    <div>\r\n                                        {post.title.map((tag) => (\r\n                                            <span className=\"badge badge-secondary\">{tag}</span>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {showActions && (\r\n                                <div className=\"row g-1\">\r\n                                    <div className=\"col-9\"/>\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"card-body\">\r\n                                            <button onClick={e => addLike(post._id)} type=\"button\" className=\"btn btn-primary\">\r\n                                            {/*<button onClick={e => addLikeNew(post._id)} type=\"button\" className=\"btn btn-primary\">*/}\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                                     fill=\"currentColor\" className=\"bi bi-hand-thumbs-up-fill\"\r\n                                                     viewBox=\"0 0 16 16\">\r\n                                                    <path\r\n                                                        d=\"M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a9.84 9.84 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733.058.119.103.242.138.363.077.27.113.567.113.856 0 .289-.036.586-.113.856-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.163 3.163 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16H8c-.605 0-1.07-.081-1.466-.218a4.82 4.82 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z\"/>\r\n                                                </svg>\r\n                                                Like <span className=\"badge bg-secondary\">{post.likeCount }</span>\r\n                                            </button>\r\n                                        </div>\r\n                                        {!auth.loading && post.user === auth.user._id && (\r\n                                            <div className=\"card-body\">\r\n                                                <button onClick={() => deletePost(post._id)} type=\"button\"\r\n                                                        className=\"btn btn-danger\">Delete\r\n                                                </button>\r\n                                            </div>\r\n                                        )}\r\n\r\n                                    </div>\r\n                                </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPosts.defaultProps = {\r\n    showActions: true\r\n};\r\n\r\nPosts.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired,\r\n    showActions: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {addLike, deletePost})(Posts)","import axios from 'axios'\r\nimport { setAlert } from './alert'\r\n\r\nimport {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    SEARCH_POST\r\n} from './types'\r\n\r\n// const API = 'http://localhost:3000'\r\n\r\n// Get Posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API}/api/posts`)\r\n        console.log(\"res posts ui\", res);\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Search Post\r\nexport const searchPosts = (topic) => async dispatch => {\r\n    console.log(\"search post\")\r\n    const config = {\r\n        header: {'Content-Type': 'multipart/form-data'}\r\n    }\r\n    // const tags = topic.title.split(',')\r\n    // const body = {title:tags}\r\n    try {\r\n        console.log( \"text body 1\",topic.title);\r\n        const res = await axios.get(`${process.env.REACT_APP_API}/api/posts/filter/${topic.title}`, config)\r\n        console.log(\"result filter\",res)\r\n        dispatch({\r\n            type: SEARCH_POST,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(\"error add post dispatch\",err);\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,\r\n                status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Add Like\r\nexport const addLike = postId => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API}/api/posts/like/${postId}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { postId, likes: res.data  }\r\n        })\r\n        //dispatch(setAlert('Post liked','success'))\r\n    } catch (err) {\r\n        console.log(\"error like\", err);\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Delete  post\r\nexport const deletePost = postId => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`${process.env.REACT_APP_API}/api/posts/${postId}`)\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: postId\r\n        })\r\n\r\n        dispatch(setAlert('Post removed','success'))\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Add  post\r\nexport const addPost = (data) => async dispatch => {\r\n    const config = {\r\n        header: {'Content-Type': 'multipart/form-data'}\r\n    }\r\n    try {\r\n        // console.log( \"text body\",body);\r\n        const res = await axios.post(`${process.env.REACT_APP_API}/api/posts`, data, config)\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        })\r\n        console.log(\"after dispatch\")\r\n        dispatch(setAlert('Post Created','success'))\r\n\r\n    } catch (err) {\r\n        console.log(\"error add post dispatch\",err);\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Posts from './Posts';\r\nimport { getPosts } from '../action/post';\r\n\r\n// Importing posts array from post (a component in state)\r\nconst Feeds = ({ getPosts, post: { posts } }) => {\r\n    useEffect(() => {\r\n        getPosts();\r\n        console.log(\"call get post\");\r\n    }, [getPosts]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Posts</h1>\r\n            {/* mapping through the posts array and passing the data to Posts component to display them */}\r\n            <div >\r\n                {posts.map((post) => (\r\n                    <Posts key={post._id} post={post} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nPosts.prototype = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Feeds);","import { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { login } from '../action/auth'\r\nimport  React,{ useState } from 'react'\r\nimport './LogIn-Register.css';\r\nimport axios from \"axios\";\r\n\r\nconst LogIn = ({ login, isAuthenticated }) => {\r\n\r\n\tconst [formData, setData] = useState({\r\n\t\temail : '',\r\n\t\tpassword : ''\r\n\t})\r\n\r\n\tconst { email , password} = formData\r\n\r\n\tconst onChange = e => setData({...formData, [e.target.name]: e.target.value })\r\n\r\n\tconst onSubmit = async e => {\r\n\t\te.preventDefault();\r\n\t\tlogin({email, password})\r\n\t}\r\n\r\n\t// Redirect if logged in\r\n\r\n\tif(isAuthenticated){\r\n\t\treturn <Redirect to='/profile' />\r\n\t}\r\n\r\n\tconst responseGoogleSuccess = (response) => {\r\n\t\tconsole.log(response);\r\n\t\taxios({\r\n\t\t\tmethod:\"POST\",\r\n\t\t\turl:\"http://localhost:3000/api/auth/googlelogin\",\r\n\t\t\tdata: {token: response.tokenId}\r\n\t\t}).then(resp=>{\r\n\t\t\tconsole.log(\"google login success\",resp.data.token);\r\n\t\t\tlogin({email, password})\r\n\t\t})\r\n\t}\r\n\r\n\tconst responseGoogle = (response) => {\r\n\t\tconsole.log(response);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"body-lr\">\r\n\t\t\t<div className=\"background\">\r\n\t\t\t\t<div className=\"shape\"/>\r\n\t\t\t\t<div className=\"shape\"/>\r\n\t\t\t</div>\r\n\t\t\t<form className=\"bar form-lr\" role=\"form\" method=\"post\" onSubmit={e => onSubmit(e)}>\r\n\t\t\t\t<h3>Login Here</h3>\r\n\t\t\t\t<label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n\t\t\t\t<input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" required=\"\"\r\n\t\t\t\t\t   name=\"email\" onChange={e => onChange(e)} autoComplete=\"off\"/>\r\n\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n\r\n\t\t\t\t<label htmlFor=\"exampleInputPassword1\">Password</label>\r\n\t\t\t\t<input onChange={e => onChange(e)} type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" name=\"password\" />\r\n\t\t\t\t<button type=\"submit\" className=\"btn\">Log In</button>\r\n\t\t\t\t{/* <div className=\"social\">\r\n\t\t\t\t\t<div className=\"go\"\r\n\t\t\t\t\t\t clientId={process.env.REACT_APP_CID}\r\n\t\t\t\t\t\t buttonText=\"Login\"\r\n\t\t\t\t\t\t onSuccess={responseGoogleSuccess}\r\n\t\t\t\t\t\t onFailure={responseGoogle}\r\n\t\t\t\t\t\t cookiePolicy={'single_host_origin'}>\r\n\t\t\t\t\t\t<i className=\"fab fa-google\"/>\r\n\t\t\t\t\t\tGoogle\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"fb\">\r\n\t\t\t\t\t\t<i className=\"fab fa-facebook\"/>\r\n\t\t\t\t\t\tFacebook\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> */}\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLogIn.prototype = {\r\n\tlogin: PropTypes.func.isRequired,\r\n\tisAuthenticated: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tisAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(LogIn)\r\n","import React,{ useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setAlert } from '../action/alert'\r\nimport { register } from '../action/auth'\r\nimport PropTypes from 'prop-types'\r\nimport './LogIn-Register.css'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n\r\n\tconst [formData, setData] = useState({\r\n\t\tname : '',\r\n\t\temail : '',\r\n\t\tpassword : '',\r\n\t\tconfirmPassword : ''\r\n\t})\r\n\r\n\tconst { name, email , password , confirmPassword } = formData\r\n\r\n\tconst onChange = e => setData({...formData, [e.target.name]: e.target.value })\r\n\r\n\tconst onSubmit = async e => {\r\n\t\te.preventDefault();\r\n\t\tif (password !== confirmPassword){\r\n\t\t\tsetAlert('Password does not match','danger')\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"ui name\", name);\r\n\t\t\tregister({name, email, password})\r\n\t\t}\r\n\t}\r\n\r\n\tif (isAuthenticated){\r\n\t\treturn <Redirect to='/profile' />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"background\" >\r\n\t\t\t\t<div className=\"shape\"/>\r\n\t\t\t\t<div className=\"shape\"/>\r\n\t\t\t</div>\r\n\t\t\t<form className=\"bar form-lr form-register\"  onSubmit={e => onSubmit(e)} role=\"form\" method=\"post\">\r\n\t\t\t\t<h3>Register Here</h3>\r\n\t\t\t\t<label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n\t\t\t\t<input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" required=\"\" name=\"email\" onChange={e => onChange(e)} autoComplete=\"off\"/>\r\n\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n\r\n\t\t\t\t<label htmlFor=\"exampleInputName\">Name</label>\r\n\t\t\t\t<input type=\"text\" className=\"form-control\" id=\"exampleInputName\" aria-describedby=\"emailHelp\" name=\"name\" onChange={e => onChange(e)} autoComplete=\"off\"/>\r\n\r\n\t\t\t\t<label htmlFor=\"exampleInputPassword1\">Password</label>\r\n\t\t\t\t<input onChange={e => onChange(e)} type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" name=\"password\" />\r\n\r\n\t\t\t\t<label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\r\n\t\t\t\t<input type=\"password\" className=\"form-control\" name=\"confirmPassword\" onChange={e => onChange(e)}/>\r\n\t\t\t\t<button type=\"submit\" className=\"btn\">Register</button>\r\n\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nRegister.propType = {\r\n\tsetAlert : PropTypes.func.isRequired,\r\n\tregister : PropTypes.func.isRequired,\r\n\tisAuthenticated : PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tisAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register)\r\n","import React, {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { addPost } from '../action/post'\r\nimport PropTypes from 'prop-types'\r\nimport Axios from 'axios'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'\r\n\r\nconst AddPost = ({addPost}) => {\r\n\r\n\t// State Initialization\r\n\tconst [formData, setFormData] = useState({\r\n\t\ttext: '',\r\n\t\ttitle:\"\"\r\n\t})\r\n\tconst [image,setImage] = useState()\r\n\tconst [value, setValue] = useState('')\r\n\r\n\tconst {text,title} = formData\r\n\r\n\t// setting values from inputs into a formData\r\n\tconst onChange = e => setFormData({...formData, [e.target.id] : e.target.value})\r\n\r\n\t// To set the value of text in formData when the value changes \r\n\tuseEffect(() => {\r\n\t\tsetFormData({...formData,\"text\":value})\r\n\t}, [value])\r\n\r\n\t// Submitting the data\r\n\tconst onSubmit = e => {\r\n\t\te.preventDefault()\r\n\t\t//setFormData({...formData,\"text\":value})\r\n\t\tconsole.log(\"data\",formData)\r\n\t\tconst data = new FormData();\r\n\t\tdata.append(\"text\",formData.text);\r\n\t\tconst tags = formData.title.split(',')\r\n\t\ttags.forEach(item => {\r\n\t\t\tdata.append(\r\n\t\t\t\t\"title\",item\r\n\t\t\t); });\r\n\t\tdata.append(\"image\",image);\r\n\r\n\t\t// Axios.post(\"https://httpbin.org/anything\",data)\r\n\t\t//     .then(res =>console.log(\"res\",res))\r\n\t\t//     .catch(err =>console.log(\"err\",err))\r\n\t\tconsole.log(\"buffer\",data);\r\n\t\taddPost(data)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-3\"/>\r\n\t\t\t<div className=\"col-6\">\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t<form onSubmit={e => onSubmit(e)} id=\"add-post-form\" encType=\"multipart/form-data\">\r\n\t\t\t\t\t\t\t{/* Taking Inputs */}\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"formFile\" className=\"form-label\">Add Image</label>\r\n\t\t\t\t\t\t\t\t\t<input onChange={e => {\r\n\t\t\t\t\t\t\t\t\t\tconst file = e.target.files[0];\r\n\t\t\t\t\t\t\t\t\t\tsetImage(file);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} className=\"form-control\" type=\"file\" id=\"image\"/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t<label>Add Caption</label>\r\n\t\t\t\t\t\t\t\t\t<small>(Max 200 words)</small>\r\n\t\t\t\t\t\t\t\t\t{/* <textarea onChange={e => onChange(e)} className=\"form-control\" id=\"text\" rows=\"3\"></textarea> */}\r\n\t\t\t\t\t\t\t\t\t<ReactQuill theme=\"snow\" value={value} onChange={setValue}/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t<label>Add Tags</label>\r\n\t\t\t\t\t\t\t\t\t<small>(Please don't add more than 30 tags)</small>\r\n\t\t\t\t\t\t\t\t\t<textarea onChange={e => onChange(e)} className=\"form-control\" id=\"title\" rows=\"3\"/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">Post</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\nAddPost.propTypes = {\r\n\taddPost: PropTypes.func.isRequired\r\n}\r\n\r\n// Connecting react program with redux\r\nexport default connect(null, {addPost})(AddPost)","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../Spinner';\r\n\r\nconst PrivateRoute = ({\r\n                          component: Component,\r\n                          auth: { isAuthenticated, loading },\r\n                          ...rest\r\n                      }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            loading ? (\r\n                <Spinner />\r\n            ) : isAuthenticated ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { useHistory } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { addExperience } from '../action/profile'\r\n\r\n\r\nconst AddExperience = ({ addExperience }) => {\r\n\r\n    // State Initialization\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        title: '',\r\n        from: '',\r\n        to: '',\r\n        current: false\r\n    })\r\n\r\n    // If it is the current job then there will be no end data so a checkbox is there to handle that.\r\n    const [toDateDisabled, toggleDisabled] = useState(false)\r\n\r\n    const { company, title, from, to, current } = formData\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.id]: e.target.value})\r\n\r\n    const history = useHistory()\r\n\r\n    // Submitting the data\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(\"data\",formData);\r\n        addExperience(formData)\r\n        //history.push('/profile')\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-3\"/>\r\n            <div className=\"col-6\">\r\n                <br/>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={e => onSubmit(e)}>\r\n                            {/* Taking inputs */}\r\n                            <div className=\"form-group\">\r\n                                <h2>Add Experience</h2>\r\n                                <label>Company</label>\r\n                                <input onChange={e => onChange(e)} type=\"text\" className=\"form-control\"  id=\"company\"/>\r\n                                <br/>\r\n                                <label>Designation</label>\r\n                                <input onChange={e => onChange(e)} type=\"text\" className=\"form-control\"  id=\"title\"/>\r\n                                <br/>\r\n                                <label>Current Job</label>\r\n                                <br />\r\n                                <input type=\"checkbox\" className=\"\" checked={current} id=\"current\" onChange={_ => {\r\n                                    setFormData({...formData, current: !current})\r\n                                    toggleDisabled(!toDateDisabled)\r\n                                }} />\r\n                                <br/>\r\n                                <label >Start</label>\r\n                                <input onChange={e => onChange(e)} type=\"date\" className=\"form-control\"  id=\"from\"/>\r\n                                <br/>\r\n                                <label >End</label>\r\n                                <input onChange={e => onChange(e)} type=\"date\" className=\"form-control\"  id=\"to\" disabled={toDateDisabled ? 'disabled' : ''}/>\r\n                                <br/>\r\n                                {/*Submitting Button */}\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Add</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired\r\n}\r\n\r\n// Connecting react program with redux\r\nexport default connect(null, {addExperience})(AddExperience)\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from '../action/types'\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload } = action\r\n    switch(type){\r\n        case USER_LOADED :\r\n            return {\r\n                ...state,\r\n                isAuthenticated : true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case REGISTER_SUCCESS :\r\n        case LOGIN_SUCCESS :\r\n            localStorage.setItem('token',payload.token);\r\n            return {\r\n                ...state, ...payload, isAuthenticated: true, loading: false\r\n            }\r\n        case REGISTER_FAIL :\r\n        case AUTH_ERROR :\r\n        case LOGIN_FAIL :\r\n        case LOGOUT :\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state, token: null, isAuthenticated: false, loading:false\r\n            }\r\n        default :\r\n        return state\r\n    }\r\n}","import {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport React, {Fragment, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Spinner from './Spinner'\r\nimport auth from \"../reducers/auth\";\r\nimport ProfileExperience from '../components/ProfileExperience'\r\nimport Moment from \"react-moment\";\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { AiFillInfoCircle } from 'react-icons/ai'\r\nimport { GrUpdate, GrUserExpert } from 'react-icons/gr'\r\nimport { MdWork } from 'react-icons/md'\r\nimport { FaGithub, FaLinkedin, FaTwitter } from 'react-icons/fa'\r\nimport { RiProfileLine, RiErrorWarningLine } from 'react-icons/ri'\r\nimport ReactStars from \"react-rating-stars-component\"\r\n\r\nconst ShowProfile = ({\r\n                         auth,\r\n                         profile: {social, skills, _id, user, bio, experience, date}\r\n                     }) => {\r\n\r\n    console.log(\"profile show\", social, skills, _id);\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\"/>\r\n                <div className=\"col-6 card shadow p-3 mb-5 bg-light rounded\">\r\n                    <h4><CgProfile/> {user.name}\r\n                    <ReactStars\r\n                        count={5}\r\n                        isHalf={true}\r\n                        edit={false}\r\n                        size={24}\r\n                        value={user.rating.rating}\r\n                        activeColor=\"#5cb85c\"\r\n                    /></h4>\r\n                    <br/>\r\n                    {social ?\r\n                    <div className=\"row card-body \">\r\n                        <div className=\"col\">\r\n                            <h5><FaGithub/> Github</h5>\r\n                            {social.githubusername ?\r\n                                <a href={\"https://github.com/\"+social.githubusername} target=\"_blank\">\r\n                                {\"https://github.com/\"+social.githubusername}</a> : <div/>}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <h5><FaLinkedin/> Linked In</h5>\r\n                            {social.linkedIn ?\r\n                                <a href={\"https://github.com/\"+social.linkedIn} target=\"_blank\">\r\n                                {\"https://github.com/\"+social.linkedIn}</a> : <div/>}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <h5><FaTwitter/> Twitter</h5>\r\n                            {social.twitter ?\r\n                                <a href={\"https://github.com/\"+social.twitter} target=\"_blank\">\r\n                                {\"https://github.com/\"+social.twitter}</a> : <div/>}\r\n                        </div>\r\n                    </div>:<div/>}\r\n                    <div className=\"form-group\">\r\n                        <h5><RiProfileLine/> Bio</h5>\r\n                        {bio ?\r\n                            <p>{bio}</p> : <div/>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h5><GrUserExpert/> Skills</h5>\r\n                        {skills.map((skill) => (\r\n                            <h3><span className=\"badge badge-info\">{skill}</span></h3>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <button type=\"button\" className=\"btn btn-primary\"\r\n                                onClick={() => toggleSocialInputs(!displaySocialInputs)}><span><AiFillInfoCircle/></span> Learn More\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            \r\n                        </div>\r\n                        <div className=\"col\"/>\r\n                    </div>\r\n                    <br/>\r\n                    {displaySocialInputs && (\r\n                        <div className=\"form-group\">\r\n                            <br/>\r\n                                {experience.length > 0 ? (\r\n                                    <Fragment>\r\n                                        <h5>Experience</h5>\r\n                                        <table className=\"table\">\r\n                                            <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">Company</th>\r\n                                                <th scope=\"col\">Designation</th>\r\n                                                <th scope=\"col\">Start</th>\r\n                                                <th scope=\"col\">End</th>\r\n                                                <th scope=\"col\">Current</th>\r\n                                            </tr>\r\n                                            </thead>\r\n\r\n                                        {experience.map((experience) => (\r\n                                            <tbody>\r\n                                            <tr>\r\n                                                <td>{experience.company}</td>\r\n                                                <td>{experience.title}</td>\r\n                                                <td><Moment format=\"YYYY/MM/DD\" date={experience.from}/></td>\r\n                                                <td><Moment format=\"YYYY/MM/DD\" date={experience.to}/></td>\r\n                                                <td className=\"form-check\" style={{\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: \"center\",\r\n                                                    alignItems: \"center\"\r\n                                                }}>\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\"\r\n    id=\"defaultCheck1\"\r\n    checked={experience.current ? 'checked' : ''}/>\r\n                                                </td>\r\n                                            </tr>\r\n                                            </tbody>\r\n                                        ))}\r\n                                        </table>\r\n                                    </Fragment>\r\n                                ) : (\r\n                                    <h4>No experience credentials <RiErrorWarningLine/></h4>\r\n                                )}\r\n\r\n                        </div>\r\n                    )}\r\n                    {!auth.loading && user._id === auth.user._id && (\r\n                        <div className=\"row\">\r\n                            <br/>\r\n                            <div className=\"col\">\r\n                                <Link to='/addExperience'>\r\n                                    <button className=\"btn btn-primary\"><span><MdWork/></span> Add Experience</button>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <Link to='/update'>\r\n                                    <button className=\"btn btn-primary\"><span><GrUpdate/></span> Update</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <br/>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nShowProfile.prototype = {\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(ShowProfile)\r\n","import React, { Fragment, useState,useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Posts from './Posts';\r\nimport { searchPosts } from '../action/post';\r\n\r\nconst SearchPost = ({ searchPosts, post: { searchPostArr }}) => {\r\n    useEffect(() => {\r\n        searchPosts();\r\n        console.log(\"call get post\");\r\n    }, [searchPosts]);\r\n\r\n\r\n    const onSubmit = e => {\r\n        console.log(\"call submit\",topic)\r\n        e.preventDefault()\r\n        searchPosts(topic);\r\n        console.log(\"call get post\");\r\n    };\r\n\r\n    const [topic, setTopic] = useState({title:''})\r\n\r\n    const onChange = e => setTopic({ ...topic,[e.target.id]: e.target.value })\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-fluid row align-items-center\">\r\n            \r\n                <div className=\"col\">\r\n                <br/>\r\n                <form className=\"bar\" method=\"get\" >\r\n                    <div>\r\n                        <h1 className=\"large text-primary\">Enter Tag</h1>\r\n                        <input onChange={e => onChange(e)} type=\"text\" className=\"form-control\" id=\"title\" placeholder=\"Search Post\" name=\"title\"/>\r\n                        <br/>\r\n                        <button onClick={e => onSubmit(e)} type=\"submit\" className=\"btn btn-primary\" id=\"searchQuery\">Search</button>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n                <div className=\"col\"/>\r\n                <div className=\"col\"/>\r\n            </div>\r\n            <div >\r\n                {searchPostArr.map((post) => (\r\n                    <Posts key={post._id} post={post} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nSearchPost.propTypes = {\r\n    searchPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchPosts })(SearchPost);","import React, {Fragment, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ShowProfile from './ShowProfile';\r\nimport { getProfilesBySkill } from '../action/profile';\r\n\r\nconst SearchProfile = ({ getProfilesBySkill, profile: { searchProfiles } }) => {\r\n    useEffect(() => {\r\n        getProfilesBySkill();\r\n        console.log(\"call get post\");\r\n    }, [getProfilesBySkill]);\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        getProfilesBySkill(topic.skill);\r\n    };\r\n\r\n    const [topic, setTopic] = useState({skill:''})\r\n\r\n    const onChange = e => setTopic({ ...topic,[e.target.id]: e.target.value })\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-fluid row align-items-center\">\r\n            \r\n            <div className=\"col\">\r\n            <br/>\r\n            <form className=\"bar\" method=\"get\" >\r\n                <div>\r\n                    <h1 className=\"large text-primary\">Enter Skill</h1>\r\n                    <input onChange={e => onChange(e)} type=\"text\" className=\"form-control\" id=\"skill\" placeholder=\"Search Post\" name=\"query\"/>\r\n                    <br/>\r\n                    <button onClick={e => onSubmit(e)} type=\"submit\" className=\"btn btn-primary\" id=\"searchQuery\">Search</button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n            <div className=\"col\"/>\r\n            <div className=\"col\"/>\r\n        </div>\r\n            <div >\r\n                {searchProfiles.map((profile) => (\r\n                    <ShowProfile key={profile._id} profile={profile} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nSearchProfile.propTypes = {\r\n    getProfilesBySkill: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfilesBySkill })(SearchProfile);","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ShowProfiles from './ShowProfile';\r\nimport { getProfiles } from '../action/profile';\r\nimport ShowProfile from \"./ShowProfile\";\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles } }) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n        console.log(\"call get post\");\r\n    }, [getProfiles]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Profiles</h1>\r\n            <div >\r\n                {profiles.map((profile) => (\r\n                    <ShowProfile key={profile._id} profile={profile} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from './Spinner'\r\n\r\n\r\nconst Result = query => {\r\n    console.log(\"query data\", query)\r\n    if (query.query.data) {\r\n        const dat = query.query.data\r\n        // const dat = query\r\n\r\n        const udemy = dat.udemy\r\n        const coursera = dat.coursera\r\n        const youtube = dat.youtube\r\n\r\n        const blogs = dat.blog\r\n        return (\r\n            <div>\r\n                <section className=\"container-fluid\" id=\"Result\">\r\n\r\n                    <h1>Results</h1> <br/>\r\n                    {query.query.related.length === 0 ? <div/> :\r\n                        <Fragment>\r\n                            <h2>Related Topics</h2>\r\n                            <div className=\"row\">\r\n                                <ul>{\r\n                                    query.query.related.map((topic) => (\r\n                                        <li className=\"badge badge-info\">{topic}</li>\r\n                                    ))\r\n                                }\r\n                                </ul>\r\n                            </div>\r\n                        </Fragment>}\r\n                    {query.query.prerequisites.length ===0 ? <div/> :\r\n                        <Fragment>\r\n                            <h2>Prerequisites</h2>\r\n                            <div className=\"row\">\r\n                                {\r\n                                    query.query.prerequisites.map((topic) => (\r\n                                        <span className=\"badge badge-info\">{topic}</span>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </Fragment>\r\n                    }\r\n                    <h2>Udemy</h2><br/>\r\n                    <div className=\"row\">\r\n                        {udemy.map((UdemyData) => (\r\n\r\n                            <div className=\"col\">\r\n                                <div className=\"card\">\r\n                                    <img src={UdemyData.image} className=\"card-img card-img-top\" alt=\"Best Ever Content!\"/>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\"/>\r\n                                        <p className=\"card-text\">{UdemyData.title}</p>\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item\">Instructor -{UdemyData.instructor} </li>\r\n                                        <li className=\"list-group-item\">Rating -{UdemyData.rating} </li>\r\n                                    </ul>\r\n                                    <div className=\"card-body\">\r\n                                        <a href={UdemyData.link} target=\"_blank\" className=\"card-link\">Learn More</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                        }\r\n                    </div>\r\n                    <br/>\r\n\r\n                    <br/>\r\n                    <h2>Coursera</h2><br/>\r\n                    <div className=\"row\">\r\n                        {coursera.map((CourseraData) => (\r\n                            <div className=\"col\">\r\n                                <div className=\"card\">\r\n                                    <img src={CourseraData.image} className=\"card-img card-img-top\" alt=\"Best Ever Content!\"/>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{CourseraData.title}</h5>\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item\">Instructor -{CourseraData.instructor} </li>\r\n                                        <li className=\"list-group-item\">Rating - {CourseraData.rating}</li>\r\n                                        <li className=\"list-group-item\">Level - {CourseraData.level}</li>\r\n                                    </ul>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <a href={CourseraData.link} target=\"_blank\" className=\"card-link\">Learn More</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <br/>\r\n                    <h2>Youtube</h2><br/>\r\n                    <div className=\"row\">\r\n                        {youtube.map((YoutubeData) => (\r\n                            <div className=\"col\">\r\n                                <div className=\"card\">\r\n                                    <img src={YoutubeData.image} className=\"card-img card-img-top\" alt=\"Best Ever Content!\"/>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{YoutubeData.title}</h5>\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item\">Instructor -{YoutubeData.instructor} </li>\r\n                                    </ul>\r\n                                    <div className=\"card-body\">\r\n                                        <a href={YoutubeData.link} target=\"_blank\" className=\"card-link\">Learn More</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <br/>\r\n\r\n                </section>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Spinner/>\r\n                <div>Fetching..</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nResult.propTypes = {\r\n    result: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(Result)\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Result from './Result';\r\nimport { searchQuery } from '../action/profile';\r\n\r\n\r\nconst SearchNew = ({ searchQuery, profile: { query, loading } }) => {\r\n\r\n\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\r\n\r\n    useEffect(() => {\r\n        searchQuery();\r\n        console.log(\"quey payload\",query);\r\n    }, [searchQuery]);\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        searchQuery(topic.skill);\r\n        toggleSocialInputs(true)\r\n\r\n    };\r\n\r\n    const [topic, setTopic] = useState({skill:''})\r\n\r\n    const onChange = e => setTopic({ ...topic,[e.target.id]: e.target.value })\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-fluid row align-items-center\">\r\n\r\n                <div className=\"col\">\r\n                    <br/>\r\n                    <form className=\"bar\" method=\"get\" >\r\n                        <div>\r\n                            <h1 className=\"large text-primary\">Enter topic</h1>\r\n                            <input onChange={e => onChange(e)} type=\"text\" className=\"form-control\" id=\"skill\" placeholder=\"Search Post\" name=\"query\"/>\r\n                            <br/>\r\n                            <button disabled={topic.skill === \"\"} onClick={e => onSubmit(e)} type=\"submit\" className=\"btn btn-primary\" id=\"searchQuery\">Search</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col\"/>\r\n                <div className=\"col\"/>\r\n            </div>\r\n            <div >\r\n                { (displaySocialInputs && !loading) ?\r\n                   <Result query={query}/>\r\n                    : <div/>\r\n\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nSearchNew.propTypes = {\r\n    searchQuery: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    loading: state.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchQuery })(SearchNew);","import axios from 'axios'\r\nimport { setAlert } from './alert'\r\n\r\nimport {\r\n    ASK_QUESTION,\r\n    GET_QUESTIONS,\r\n    UPDATE_QUESTION,\r\n    DELETE_QUESTION,\r\n    SEARCH_QUESTIONS,\r\n    QUESTION_ERROR,\r\n    GET_QUESTION,\r\n    GET_ANSWER,\r\n    SIMILAR_QUESTIONS\r\n} from './types'\r\n\r\n// const API = 'http://localhost:3000'\r\n\r\n// Get Questions\r\nexport const getQuestions = () => async dispatch => {\r\n    try {\r\n        axios.get(`${process.env.REACT_APP_API}/api/discussion/`)\r\n        .then((res) => {\r\n            console.log(\"res questions ui\", res)\r\n\r\n            dispatch({\r\n                type: GET_QUESTIONS,\r\n                payload: res.data\r\n            })\r\n        })\r\n    } catch (err) {\r\n        console.log(\"Error in questions\")\r\n        dispatch({\r\n            type: QUESTION_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Get Question\r\nexport const getQuestionDiscussion = id => async dispatch => {\r\n    console.log(\"get question\")\r\n    const config = {\r\n        header: {'Content-Type': 'multipart/form-data'}\r\n    }\r\n    axios.get(`${process.env.REACT_APP_API}/api/discussion/ques/${id}`, config).\r\n    then(res => {\r\n        console.log(\"result filter\",res)\r\n        dispatch({\r\n            type: GET_QUESTION,\r\n            payload: res.data\r\n        })\r\n        dispatch({\r\n            type: GET_ANSWER,\r\n            payload: res.data.answers\r\n        })\r\n    }).catch(err => {\r\n        console.log(\"error add question dispatch\",err);\r\n        dispatch({\r\n            type: QUESTION_ERROR,\r\n            payload: {msg: err.response,\r\n                status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    })   \r\n}\r\n\r\n// Search Questions By Category\r\nexport const searchQuestions = category => async dispatch => {\r\n    console.log(\"search question\")\r\n    const config = {\r\n        header: {'Content-Type': 'multipart/form-data'}\r\n    }\r\n    // const tags = topic.title.split(',')\r\n    // const body = {title:tags}\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API}/api/discussion/category/${category}`, config)\r\n        console.log(\"result search question\",res.data)\r\n        dispatch({\r\n            type: SEARCH_QUESTIONS,\r\n            payload: res.data\r\n        })\r\n        if (res.data.length === 0){\r\n            dispatch(setAlert(`No question found. Please search for another category`, 'warning'))\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(\"error add post dispatch\",err);\r\n        dispatch({\r\n            type: QUESTION_ERROR,\r\n            payload: {msg: err.response,\r\n                status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Search Questions By Similarity\r\nexport const searchSimilarQuestion = topic => async dispatch => {\r\n    console.log(\"search question\",topic)\r\n    const config = {\r\n        header: {'Content-Type': 'application/json'}\r\n    }\r\n    // const tags = topic.title.split(',')\r\n    // const body = {title:tags}\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API}/api/discussion/similar-question/`,topic, config)\r\n        console.log(\"similarity result filter\",res)\r\n        dispatch({\r\n            type: SIMILAR_QUESTIONS,\r\n            payload: res.data.similarQuesArray\r\n        })\r\n        if (res.data.similarQuesArray !== []){\r\n            dispatch(setAlert('Found Similar Questions','success'))\r\n        }\r\n        else {\r\n            dispatch(setAlert('No question found, Please enter another question','warning'))\r\n        }\r\n    } catch (err) {\r\n        console.log(\"error add post dispatch\",err);\r\n        dispatch({\r\n            type: QUESTION_ERROR,\r\n            payload: {msg: err.response,\r\n                status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Update Question\r\nexport const updateQuestion = (id,data) => async dispatch => {\r\n    console.log(\"inside update question\")\r\n    const config = {\r\n        header: {'Content-Type': 'multipart/form-data'}\r\n    }\r\n    try {\r\n        // console.log( \"text body\",body);\r\n        const res = await axios.put(`${process.env.REACT_APP_API}/api/discussion/ques/${id}`, data, config)\r\n        dispatch({\r\n            type: UPDATE_QUESTION,\r\n            payload: res.data\r\n        })\r\n        console.log(\"after dispatch\")\r\n        dispatch(setAlert('Question Updated','success'))\r\n\r\n    } catch (err) {\r\n        console.log(\"error question dispatch\",err);\r\n        dispatch({\r\n            type: QUESTION_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Delete  Questions\r\nexport const deleteQuestion = postId => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`${process.env.REACT_APP_API}/api/discussion/ques/${postId}`)\r\n        dispatch({\r\n            type: DELETE_QUESTION,\r\n            payload: postId\r\n        })\r\n\r\n        dispatch(setAlert('Question removed','success'))\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: QUESTION_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Ask Questions\r\nexport const askQuestion = (data) => async dispatch => {\r\n    console.log(\"inside ask question\")\r\n    const config = {\r\n        header: {'Content-Type': 'multipart/form-data'}\r\n    }\r\n    try {\r\n        // console.log( \"text body\",body);\r\n        const res = await axios.post(`${process.env.REACT_APP_API}/api/discussion/ques`, data, config)\r\n        dispatch({\r\n            type: ASK_QUESTION,\r\n            payload: res.data\r\n        })\r\n        console.log(\"after dispatch\")\r\n        dispatch(setAlert('Question Added','success'))\r\n\r\n    } catch (err) {\r\n        console.log(\"error question dispatch\",err);\r\n        dispatch({\r\n            type: QUESTION_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}","import {\r\n    GET_QUESTIONS,\r\n    QUESTION_ERROR,\r\n    UPDATE_QUESTION,\r\n    DELETE_QUESTION,\r\n    ASK_QUESTION,\r\n    SEARCH_QUESTIONS,\r\n    GET_QUESTION,\r\n    SIMILAR_QUESTIONS\r\n} from '../action/types'\r\n\r\nconst initialState = {\r\n    questions: [],\r\n    question: null,\r\n    loading: true,\r\n    error: {},\r\n    searchQuestionArr: [],\r\n    query: [],\r\n    similarQuestionArr: []\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload} = action\r\n    switch( type){\r\n        case GET_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                questions: payload,\r\n                loading: false\r\n            }\r\n        case ASK_QUESTION:\r\n            return {\r\n                ...state,\r\n                questions: [payload, ...state.questions],\r\n                loading: false\r\n            }\r\n        case DELETE_QUESTION:\r\n            return {\r\n                ...state,\r\n                questions: state.questions.filter(question => question._id !== payload),\r\n                loading: false\r\n            }\r\n        case QUESTION_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case SEARCH_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                searchQuestionArr: payload,\r\n                loading: false\r\n            }\r\n        case SIMILAR_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                similarQuestionArr: payload,\r\n                loading: false\r\n            }\r\n        case UPDATE_QUESTION:\r\n            return {\r\n                ...state,\r\n                questions: state.questions.map((post) => post._id === payload.postId ? { ...post,likes: payload.likes, likeCount:payload.likes.length } :post),\r\n                loading: false \r\n            }\r\n        case GET_QUESTION:\r\n            return {\r\n                ...state,\r\n                question: payload,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport question from '../reducers/question';\r\nimport { deleteQuestion } from '../action/question';\r\nimport { Link } from 'react-router-dom';\r\nimport { CgProfile } from 'react-icons/cg'\r\n\r\nconst Questions = ({ auth, question, deleteQuestion, search = false}, showActions) => {\r\n\r\n    console.log(\"in question : \",question)\r\n\r\n    // got the data of question from the QuestionFeed component\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <br/>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n                <div className=\"card mb-3 col-8\">\r\n                    <div className=\"row g-0\">\r\n                        <div className=\"col-md-4 mb-3\">\r\n                            <br />\r\n                            {question.media ?\r\n                                <img width=\"200\" height=\"200\"\r\n                                     src={question.media}\r\n                                    // src=\"https://media.wired.com/photos/5e59a85635982c0009f6eb8a/1:1/w_1350,h_1350,c_limit/python-popularity.jpg\"\r\n                                     alt=\"...\"></img>\r\n                                : <img width=\"200\" height=\"200\"\r\n                                    src=\"https://media.wired.com/photos/5e59a85635982c0009f6eb8a/1:1/w_1350,h_1350,c_limit/python-popularity.jpg\"\r\n                                       alt=\"...\"></img>\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"row g-0\">\r\n                                <div className=\"card-body\">\r\n                                    {/* <h4>{question.user.name} <Link className=\"btn btn-primary\" to={`/profile/${question.user._id}`}><CgProfile/></Link></h4> */}\r\n                                    <h4 className=\"card-title\">Q. <div dangerouslySetInnerHTML={{__html: question.title}}></div></h4>\r\n                                    <h6><div dangerouslySetInnerHTML={{__html: question.description}}></div></h6>\r\n                                    <br />\r\n                                    <p>\r\n                                        Tags :{' '}\r\n                                        {question.tags.map((tag) => (\r\n                                            <span className=\"badge badge-secondary\">{tag}</span>\r\n                                        ))}\r\n                                    </p>\r\n                                    <p>\r\n                                        Category :{' '}<span className=\"badge badge-secondary\">{question.category}</span>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row g-1\">\r\n                                <div className=\"col-9\"/>\r\n                                <div className=\"col-3\">\r\n                                    {/* Link to the page with question and all it's details */}\r\n                                    <Link to={`/question/${question._id}`} className=\"btn btn-primary\">\r\n                                        {\r\n                                            search ? <p>Open</p> : <p>Answers <span className=\"badge badge-light\">{question.answers.length}</span></p>\r\n                                        }\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nQuestions.defaultProps = {\r\n    showActions: true\r\n};\r\n\r\nQuestions.propTypes = {\r\n    question: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    deleteQuestion: PropTypes.func.isRequired,\r\n    showActions: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {deleteQuestion})(Questions)","import React from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport Questions from './Questions'\r\nimport { askQuestion } from '../action/question'\r\n\r\nconst QuestionSimilarityContinue = ({similarQuestions, questionData,image, askQuestion}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const Submit = (e) => {\r\n        e.preventDefault()\r\n        console.log(questionData)\r\n        const data = new FormData();\r\n        data.append(\"title\",questionData.title)\r\n        data.append(\"description\",questionData.description)\r\n        data.append(\"tags\",questionData.tags)\r\n        data.append(\"category\",questionData.category)\r\n        data.append(\"media\",image);\r\n        \r\n        askQuestion(data)\r\n        //history.push(`/questionsFeed`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid align-items-center\">\r\n                <br /><br />\r\n                <div className=\"row\">\r\n                    <div className=\"col-1\"></div>\r\n                    <div className=\"col-10\">\r\n                    <h1 className=\"large text-primary\">Looks like we've got some questions similar to \r\n                    what you want to ask</h1>\r\n                    </div>\r\n                    <div className=\"col-1\"></div>\r\n                </div>\r\n                \r\n                <br />\r\n                {similarQuestions === null ? <div></div> : \r\n                    similarQuestions.map((question) => (\r\n                    <Questions key={question._id} question={question} search={true} />\r\n                ))}\r\n                <br />\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col-8\">\r\n                        <h1 className=\"large text-primary\">Not what you are looking for ?</h1>\r\n                        <br />\r\n                        <button onClick={(e)=>{Submit(e)}} className=\"btn btn-primary\">Continue &amp; ask question</button>\r\n                    </div>\r\n                    <div className=\"col-2\"></div>\r\n                </div>\r\n                <br /><br />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nQuestionSimilarityContinue.propTypes = {\r\n    askQuestion: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null,{askQuestion})(QuestionSimilarityContinue)\r\n","import React, {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { askQuestion, searchSimilarQuestion } from '../action/question'\r\nimport { useHistory } from 'react-router'\r\nimport PropTypes from 'prop-types'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport data from '../Data/data.json'\r\nimport './SearchBar.css'\r\nimport Fuse from 'fuse.js'\r\nimport { GrAdd } from 'react-icons/gr'\r\nimport QuestionSimilarityContinue from './QuestionSimilarityContinue'\r\nimport Spinner from './Spinner'\r\n\r\nconst AskQuestion = ({askQuestion, searchSimilarQuestion, question:{ similarQuestionArr, loading}}) => {\r\n\r\n    // useEffect(() => {\r\n    //     searchSimilarQuestion();\r\n    //     console.log(\"call get post\");\r\n    // }, [searchSimilarQuestion]);\r\n\r\n    const [Category, setCategory] = useState('')\r\n\r\n    const fuse = new Fuse(data, {\r\n\t    keys: ['tagName']\r\n    })\r\n    // handling category recommendation using fuzzy\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [wordEntered, setWordEntered] = useState(\"\");\r\n\r\n    const handleFilter = (event) => {\r\n    const searchWord = event.target.value;\r\n    setWordEntered(searchWord);\r\n    const result = fuse.search(searchWord)\r\n    const characterResults = result.map(character => character.item.tagName)\r\n\r\n    if (searchWord === \"\") {\r\n        setFilteredData([]);\r\n    } else {\r\n        setFilteredData(characterResults);\r\n    }\r\n    };\r\n\r\n    const [similarityToggle, setSimilarityToggle] = useState(false)\r\n\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        description:\"\",\r\n        tags:\"\",\r\n        category:\"\"\r\n    })\r\n    const [image,setImage] = useState(null)\r\n    const [title, setQuestion] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.id] : e.target.value})\r\n\r\n    // adding the selected category to the list of category\r\n    const Add = (e) => {\r\n        e.preventDefault()\r\n        if (Category.length === 0){\r\n            setCategory(Category.concat(wordEntered))\r\n        }\r\n        else {\r\n            setCategory(Category.concat(\",\",wordEntered))\r\n        }\r\n        setFormData({...formData, \"category\": wordEntered})\r\n        //console.log(formData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setFormData({...formData,\"description\":description, \"category\": wordEntered})\r\n        //setFormData({...formData, \"category\": Category})\r\n    }, [title,description,wordEntered])\r\n\r\n   \r\n    const history = useHistory()\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if (formData.title.length === 0){\r\n            alert(`Title can't be empty`)\r\n        }\r\n        if (formData.description.length < 20){\r\n            if (formData.description.length === 0){\r\n                alert(\"Description can't be empty\")\r\n            }\r\n            else {\r\n                alert(\"Description should be more than 20 characters\")\r\n            }\r\n        }\r\n        if (formData.category.length === 0){\r\n            alert(\"Category can't be empty\")\r\n        }\r\n        //setFormData({...formData,\"text\"[title})\r\n        //console.log(formData)\r\n        //askQuestion(data)\r\n        else {\r\n            searchSimilarQuestion({title:formData.title})\r\n            setSimilarityToggle(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\"></div>\r\n                <div className=\"col-6\">\r\n                    <br/>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <form id=\"add-post-form\" encType=\"multipart/form-data\">\r\n                                {/* Taking inputs */}\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"mb-3\">\r\n                                        <label for=\"formFile\" className=\"form-label\">Add Image (Optional) </label>\r\n                                        <input onChange={e => {\r\n                                            const file = e.target.files[0];\r\n                                            setImage(file);\r\n                                        }\r\n                                        } className=\"form-control\" type=\"file\" id=\"image\"></input>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label>Question</label>\r\n                                        {/* <small>(Max 200 words)</small> */}\r\n                                        <textarea onChange={(e)=>{onChange(e)}} minLength=\"1\" className=\"form-control\" id=\"title\" rows=\"3\"></textarea>\r\n                                        {/* <ReactQuill theme=\"snow\" value ={title} onChange={setQuestion}/> */}\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label>Description</label>\r\n                                        <small>(Min 20 characters)</small>\r\n                                        {/* <textarea onChange={e => onChange(e)} className=\"form-control\" id=\"text\" rows=\"3\"></textarea> */}\r\n                                        <ReactQuill theme=\"snow\" value = {description} onChange={setDescription}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label>Add Tags (Optional) </label><br />\r\n                                        <small>(Please don't add more than 30 tags)</small>\r\n                                        <textarea onChange={e => onChange(e)} className=\"form-control\" id=\"tags\" rows=\"3\"></textarea>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label>Add Category</label>\r\n                                        <small>(Please add only 1 category)</small>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={wordEntered}\r\n                                            onChange={handleFilter}\r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                    {/* <div className=\"mb-3\">\r\n                                        <button className=\"btn btn-primary\" onClick={(e)=>{Add(e)}}><GrAdd  /></button>\r\n                                    </div> */}\r\n                                    {/* displaying the category list */}\r\n                                    {/* {\r\n                                        formData.category.length === 0 ? <p></p> : <p>Category : {formData.category}</p>\r\n                                    } */}\r\n                                    {/* displaying the list using fuzzy */}\r\n                                    {filteredData.length != 0 && (\r\n                                        <div className=\"dataResult\">\r\n                                        {filteredData.slice(0, 25).map((value, key) => {\r\n                                            return (\r\n                                            <div className=\"dataItem\" onClick={()=>setWordEntered(value)} >\r\n                                                <p>{value}</p>\r\n                                            </div>\r\n                                            );\r\n                                        })}\r\n                                        </div>\r\n                                    )}\r\n                                    {filteredData.length != 0 ? <br/> : <div></div>}\r\n                                    <button onClick={(e)=>{onSubmit(e)}} type=\"button\" className=\"btn btn-primary\">Ask</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n            {/* Displaying the similar questions and asking if the user still want to continue */}\r\n            {\r\n                similarityToggle ? ((loading || similarQuestionArr === []) ? <Spinner /> :\r\n                <QuestionSimilarityContinue similarQuestions={similarQuestionArr} questionData={formData} image={image}/>) :\r\n                <div></div>\r\n            }\r\n            {/* {\r\n                (loading || similarQuestionArr === []) ? <div></div> :\r\n                <QuestionSimilarityContinue similarQuestions={similarQuestionArr} questionData={formData} image={image}/>\r\n            } */}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nAskQuestion.propTypes = {\r\n    askQuestion: PropTypes.func.isRequired,\r\n    searchSimilarQuestion: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    question: state.question\r\n});\r\n\r\nexport default connect(mapStateToProps, {askQuestion, searchSimilarQuestion})(AskQuestion)","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Questions from './Questions';\r\nimport { getQuestions } from '../action/question';\r\nimport Spinner from './Spinner';\r\n\r\nconst QuestionsFeed = ({ getQuestions, question : {questions}, auth}) => {\r\n    useEffect(() => {\r\n        getQuestions();\r\n    }, [getQuestions]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                questions ? <Fragment>\r\n                <br />\r\n                <h1 className=\"large text-primary\">Questions Feed</h1>\r\n                <div >\r\n                    {/* passing data from get all question api to Questions component */}\r\n                    {questions.filter(function(question){\r\n                        return question.user._id !== auth.user._id ;\r\n                    }).map((question) => (\r\n                        <Questions key={question._id} question={question} />\r\n                    ))}\r\n                </div>\r\n                </Fragment> :\r\n                <Spinner />\r\n            }\r\n        </div>\r\n        \r\n        \r\n    );\r\n};\r\n\r\nQuestionsFeed.propTypes = {\r\n    getQuestions: PropTypes.func.isRequired,\r\n    question: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    question: state.question,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuestions })(QuestionsFeed);","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Questions from './Questions';\r\nimport { getQuestions } from '../action/question';\r\nimport Spinner from './Spinner';\r\nimport auth from '../reducers/auth';\r\n\r\nconst MyQuestions = ({ getQuestions, question : {questions} , auth}) => {\r\n    useEffect(() => {\r\n        getQuestions();\r\n    }, [getQuestions]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                questions ? <Fragment>\r\n                <br />\r\n                <h1 className=\"large text-primary\">Questions you've asked</h1>\r\n                <div >\r\n                    {/* passing data from get all question api to Questions component */}\r\n                    {questions.filter(function(question){\r\n                        return question.user._id === auth.user._id ;\r\n                    }).map((question) => (\r\n                        <Questions key={question._id} question={question} />\r\n                    ))}\r\n                </div>\r\n                </Fragment> :\r\n                <Spinner />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nMyQuestions.propTypes = {\r\n    getQuestions: PropTypes.func.isRequired,\r\n    question: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    question: state.question,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuestions })(MyQuestions);","import axios from 'axios'\r\nimport { setAlert } from './alert'\r\n\r\nimport {\r\n    ADD_ANSWER,\r\n    GET_ANSWER,\r\n    LIKE_ANSWER,\r\n    DELETE_ANSWER,\r\n    UPDATE_ANSWER,\r\n    ANSWER_ERROR,\r\n    ADD_COMMENT\r\n} from './types'\r\n\r\n// const API = 'http://localhost:3000'\r\n\r\n// Get Answer By Id\r\nexport const getAnswer = id => async dispatch => {\r\n    try {\r\n        // Sending id through api and putting response in res\r\n        const res = await axios.get(`${process.env.REACT_APP_API}/api/answer/${id}`)\r\n        console.log(\"res posts ui\", res);\r\n        // dispatching get answer action and setting response as payload\r\n        dispatch({\r\n            type: GET_ANSWER,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ANSWER_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Like Answer\r\nexport const likeAnswer = ansId => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API}/api/answer/like/${ansId}`)\r\n        // in payload we are sending ansId to tell state which answer is liked\r\n        dispatch({\r\n            type: LIKE_ANSWER,\r\n            payload: { ansId, likes: res.data  }\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(\"error like\", err);\r\n        dispatch({\r\n            type: ANSWER_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Add  Comment\r\nexport const addComment = (id,comment) => async dispatch => {\r\n    const config = {\r\n        header: {'Content-Type': 'multipart/form-data'}\r\n    }\r\n    const data = {text: comment}\r\n    try {\r\n        console.log( \"text body\",id, comment);\r\n        const res = await axios.post(`${process.env.REACT_APP_API}/api/answer/comment/${id}`, data, config)\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: {id : id, data: res.data}\r\n        })\r\n        console.log(\"comment added\")\r\n        dispatch(setAlert('Comment Added','success'))\r\n\r\n    } catch (err) {\r\n        console.log(\"error add answer dispatch\",err);\r\n        dispatch({\r\n            type: ANSWER_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Delete  Answer\r\nexport const deleteAnswer = answerId => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API}/api/answer/delete/${answerId}`)\r\n        dispatch({\r\n            type: DELETE_ANSWER,\r\n            payload: answerId\r\n        })\r\n\r\n        dispatch(setAlert('Answer removed','success'))\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ANSWER_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Add  Answer\r\nexport const addAnswer = (id,description,userData) => async dispatch => {\r\n    const config = {\r\n        header: {'Content-Type': 'multipart/form-data'}\r\n    }\r\n    const data = {description: description}\r\n    try {\r\n        console.log( \"text body\",id, description,userData);\r\n        const res = await axios.post(`${process.env.REACT_APP_API}/api/answer/${id}`, data, config)\r\n        dispatch({\r\n            type: ADD_ANSWER,\r\n            payload: {...res.data,user:userData}\r\n        })\r\n        console.log(\"after dispatch\")\r\n        dispatch(setAlert('Answer Added','success'))\r\n\r\n    } catch (err) {\r\n        console.log(\"error add answer dispatch\",err);\r\n        dispatch({\r\n            type: ANSWER_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}\r\n\r\n// Update  Answer\r\nexport const updateAnswer = (id,description) => async dispatch => {\r\n    const config = {\r\n        header: {'Content-Type': 'multipart/form-data'}\r\n    }\r\n    const data = {description: description}\r\n    try {\r\n        console.log( \"text body\",id, description);\r\n        const res = await axios.put(`${process.env.REACT_APP_API}/api/answer/${id}`, data, config)\r\n        dispatch({\r\n            type: UPDATE_ANSWER,\r\n            payload: {ansId: id, data: res.data}\r\n        })\r\n        console.log(\"after dispatch\")\r\n        dispatch(setAlert('Answer Updated','success'))\r\n\r\n    } catch (err) {\r\n        console.log(\"error add answer dispatch\",err);\r\n        dispatch({\r\n            type: ANSWER_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n        const error = err.response.data.errors;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { BsArrowReturnRight } from 'react-icons/bs'\r\n\r\nconst Comments = ({id}) => {\r\n\r\n    const [data, setData] = useState(null)\r\n\r\n    {/* fetching the answer details using it's id to get comments on that answer */}\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:3000/api/answer/${id}`).then((res)=>{\r\n            console.log(res.data.comments.comments)\r\n            setData(res.data.comments.comments)\r\n            //console.log(data.comments)\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n\r\n    var comment = data\r\n    \r\n    return (\r\n        <div>\r\n            <br />\r\n            \r\n            {\r\n                data ?\r\n                data.map((element)=>(\r\n                    <p> <BsArrowReturnRight/> {element.text}</p>\r\n                )) :\r\n                <p>No comments</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { addAnswer, deleteAnswer, likeAnswer, updateAnswer, addComment } from '../action/answers'\r\nimport { AiFillLike,AiFillDelete,AiFillEdit } from 'react-icons/ai'\r\nimport { BiCommentAdd } from 'react-icons/bi'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { connect } from 'react-redux'\r\nimport Comments from './Comments'\r\nimport { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\n\r\nconst AnswerItem = ({ answers:{answers},auth,GlobalId, deleteAnswer, likeAnswer,addComment, updateAnswer, addAnswer}) => {\r\n\r\n    //getting the id of question from QuestionAnswerItem component\r\n\r\n    const [answerToggle, setAnswerToggle] = useState(false)\r\n\r\n    const [updateToggle, setUpdateToggle] = useState(false)\r\n\r\n    const [answerId, setAnswerId] = useState(null)\r\n\r\n    const [commentId, setCommentId] = useState(null)\r\n\r\n    const [updateData, setUpdateData] = useState(\"\")\r\n\r\n    const [answerData, setAnswerData] = useState(\"\")\r\n\r\n    const [commentToggle, setCommentToggle] = useState(false)\r\n\r\n    const [commentData, setCommentData] = useState(\"\")\r\n\r\n    const Submit = e => {\r\n        const userData = {email: auth.user.email,name:auth.user.name,_id:auth.user._id}\r\n        e.preventDefault()\r\n        console.log(\"comment : \",commentData)\r\n        addAnswer(GlobalId,commentData,userData)\r\n        setCommentToggle(!commentToggle)\r\n        //setLoading(!loading)\r\n    }\r\n\r\n    // setting what content is inputted\r\n    const onChange = e => {\r\n        e.preventDefault()\r\n        if (e.target.id === \"comment\"){\r\n            setCommentData(e.target.value)\r\n        }\r\n        else if (e.target.id === \"update\"){\r\n            setUpdateData(e.target.value)\r\n        }\r\n        else if (e.target.id === \"answer\"){\r\n            setAnswerData(e.target.value)\r\n        }\r\n    }\r\n\r\n    const UpdateAnswer = e => {\r\n        e.preventDefault()\r\n        console.log(\"new answer : \",updateData)\r\n        updateAnswer(answerId,updateData)\r\n        setUpdateToggle(!updateToggle)\r\n        //window.location.reload(false)\r\n    }\r\n\r\n    const DeleteAnswer = (id) => {\r\n        deleteAnswer(id)\r\n        //window.location.reload(false)\r\n    }\r\n\r\n    // question update function\r\n    const Update = (e,description,id) => {\r\n        e.preventDefault()\r\n        setUpdateData(description)\r\n        setAnswerId(id)\r\n        setUpdateToggle(!updateToggle)\r\n    }\r\n\r\n    const Comment = (e) => {\r\n        //e.preventDefault()\r\n        addComment(commentId,answerData)\r\n        setAnswerToggle(!answerToggle)\r\n    }\r\n\r\n    const AddComment = (e,id) => {\r\n        e.preventDefault()\r\n        setCommentId(id)\r\n        setAnswerToggle(!answerToggle)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div >\r\n                <button className=\"btn btn-primary\" onClick={()=>setCommentToggle(!commentToggle)}>Add Answer <BiCommentAdd/></button>\r\n            </div>\r\n            {/* Handling input types */}\r\n            {\r\n                commentToggle ? \r\n                <div className=\"row g-2\">\r\n                    <div className=\"col\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label>Enter Answer (min 25 characters)</label>\r\n                                <textarea className=\"form-control\" id=\"comment\" rows=\"3\" value={commentData} onChange={e=>onChange(e)}></textarea>\r\n                            </div>\r\n                            <button className=\"btn btn-primary\" onClick={e=>Submit(e)}>Add</button>\r\n                        </form>\r\n                        <br />\r\n                    </div>\r\n                </div> : <div></div>\r\n            }\r\n            {\r\n                updateToggle ? \r\n                <div className=\"row g-2\">\r\n                    <div className=\"col\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label>Update Answer</label>\r\n                                <textarea className=\"form-control\" id=\"update\" rows=\"3\" value={updateData} onChange={e=>onChange(e)}></textarea>\r\n                            </div>\r\n                            <button className=\"btn btn-info\" onClick={e=>UpdateAnswer(e)}><AiFillEdit/></button>\r\n                        </form>\r\n                        <br />\r\n                    </div>\r\n                </div> : <div></div>\r\n            }\r\n            {\r\n                answerToggle ? \r\n                <div className=\"row g-2\">\r\n                    <div className=\"col\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label>Add Comment (min 5 characters)</label>\r\n                                <textarea className=\"form-control\" id=\"answer\" rows=\"3\" value={answerData} onChange={e=>onChange(e)}></textarea>\r\n                            </div>\r\n                            <button className=\"btn btn-info\" onClick={e=>Comment(e)}><AiFillEdit/></button>\r\n                        </form>\r\n                        <br />\r\n                    </div>\r\n                </div> : <div></div>\r\n            }\r\n            <div className=\"row g-3\">\r\n                <div className=\"col\">\r\n                    {/* Check if there are any answers if there are then display them */}\r\n                    {\r\n                        answers.length > 0 ?\r\n                            <div>\r\n                                <h3>Answers</h3>\r\n                                {\r\n                                answers.map((element) => (\r\n                                    <div>\r\n                                        <div className=\"row\">\r\n                                    \r\n                                            <div className=\"col-1\">{element.user.name}<Link className=\"btn btn-primary\" to={`/profile/${element.user._id}`}><CgProfile/></Link></div>\r\n                                            <div className=\"col-7\">{element.description}</div>\r\n                                            <div className=\"col-1\"><button className=\"btn btn-primary\" type=\"button\" onClick={e=>likeAnswer(element._id)}>\r\n                                                <AiFillLike/>: <span className=\"badge badge-light\">{element.likeCount}</span>\r\n                                            </button></div>\r\n                                            <div className=\"col-1\"><button className=\"btn btn-primary\" onClick={e=>AddComment(e,element._id)}>\r\n                                                <BiCommentAdd/>\r\n                                            </button></div>\r\n                                            <div className=\"col-1\">\r\n                                                {!auth.loading && element.user._id === auth.user._id && (\r\n                                                    <button onClick={e => Update(e,element.description,element._id)} type=\"button\"\r\n                                                            className=\"btn btn-info\"><AiFillEdit/>\r\n                                                    </button>\r\n                                                )}\r\n                                            </div>\r\n                                            <div className=\"col-1\">\r\n                                                {/* Checking ig user has authority to delete the answer */}\r\n                                                {!auth.loading && element.user._id === auth.user._id && (\r\n                                                    <button onClick={() => DeleteAnswer(element._id)} type=\"button\"\r\n                                                            className=\"btn btn-danger\"><AiFillDelete/>\r\n                                                    </button>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* checking if there are comment and if there are then display them \r\n                                        using the Comment component */}\r\n                                        {\r\n                                            element.comments ? <Comments id={element._id}/> : <p>No Comments</p>\r\n                                        }\r\n                                        \r\n                                        <hr />\r\n                                    </div>\r\n                                    \r\n                                ))\r\n                                }\r\n                            </div>:\r\n                            <h2>No Answers</h2>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nAnswerItem.propTypes = {\r\n    deleteQuestion: PropTypes.func.isRequired,\r\n    addAnswer: PropTypes.func.isRequired,\r\n    deleteAnswer: PropTypes.func.isRequired,\r\n    likeAnswer: PropTypes.func.isRequired,\r\n    addComment: PropTypes.func.isRequired,\r\n    updateAnswer: PropTypes.func.isRequired,\r\n    answers: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    answers: state.answers\r\n})\r\n\r\nexport default connect(mapStateToProps, {addAnswer,  deleteAnswer, likeAnswer,addComment, updateAnswer})(AnswerItem)\r\n","import React from 'react'\r\nimport { Fragment, useEffect, useState, useRef } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from './Spinner'\r\nimport { Link } from 'react-router-dom'\r\nimport {  deleteQuestion, getQuestionDiscussion } from '../action/question'\r\nimport { addAnswer, getAnswer } from '../action/answers'\r\nimport { AiFillLike,AiFillDelete,AiFillEdit } from 'react-icons/ai'\r\nimport { BiCommentAdd } from 'react-icons/bi'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport AnswerItem from './AnswerItem'\r\nimport { MdZoomOutMap } from 'react-icons/md'\r\n\r\nconst QuestionAnswerItem = ({  question ,answers:{answers, loading}, GlobalId, auth, deleteQuestion,addAnswer, getAnswer}) => {\r\n\r\n    // got the data of question from the Question Discussion component\r\n\r\n    const history = useHistory()\r\n\r\n    const Delete = (e,id) => {\r\n        e.preventDefault()\r\n        deleteQuestion(id)\r\n        history.push(`/questionsFeed`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                question ? \r\n                <div>\r\n                    <br />\r\n                     \r\n                    <div id=\"myModal\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\">\r\n                    <div className=\"modal-dialog\">\r\n                      <div className=\"modal-content\">\r\n                          <div className=\"modal-body\">\r\n                                {question.result.media ?\r\n                                        <img width=\"100%\" height=\"100%\"\r\n                                            src={question.result.media}\r\n                                            // src=\"https://media.wired.com/photos/5e59a85635982c0009f6eb8a/1:1/w_1350,h_1350,c_limit/python-popularity.jpg\"\r\n                                            alt=\"...\"></img>\r\n                                        : <img width=\"100%\" height=\"100%\"\r\n                                            src=\"https://media.wired.com/photos/5e59a85635982c0009f6eb8a/1:1/w_1350,h_1350,c_limit/python-popularity.jpg\"\r\n                                            alt=\"...\"></img>\r\n                                }\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                    </div> \r\n                    \r\n                    <div className=\"row\">\r\n                        <br/>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-1\"></div>\r\n                        <div className=\"card mb-3 col-10\">\r\n                            <div className=\"row g-0\">\r\n                                <div className=\"col-md-4 mb-3\">\r\n                                    <br />\r\n                                    {question.result.media ?\r\n                                        <img width=\"200\" height=\"200\"\r\n                                            src={question.result.media}\r\n                                            // src=\"https://media.wired.com/photos/5e59a85635982c0009f6eb8a/1:1/w_1350,h_1350,c_limit/python-popularity.jpg\"\r\n                                            alt=\"...\"></img>\r\n                                        : <img width=\"200\" height=\"200\"\r\n                                            src=\"https://media.wired.com/photos/5e59a85635982c0009f6eb8a/1:1/w_1350,h_1350,c_limit/python-popularity.jpg\"\r\n                                            alt=\"...\"></img>\r\n                                    }\r\n                                    <br />\r\n                                    <button type=\"button\" class=\"btn btn-light\" data-toggle=\"modal\" data-target=\"#myModal\"><MdZoomOutMap/></button>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                    <div className=\"row g-0\">\r\n                                        <div className=\"card-body\">\r\n                                            <h4>{question.result.user.name} <Link className=\"btn btn-primary\" to={`/profile/${question.result.user._id}`}><CgProfile/></Link></h4>\r\n                                            <h4 className=\"card-title\">Q. <div dangerouslySetInnerHTML={{__html: question.result.title}}></div></h4>\r\n                                            <h6><div dangerouslySetInnerHTML={{__html: question.result.description}}></div></h6>\r\n                                            <br />\r\n                                            <p>\r\n                                                Tags :{' '}\r\n                                                {question.result.tags.map((tag) => (\r\n                                                    <span className=\"badge badge-secondary\">{tag}</span>\r\n                                                ))}\r\n                                            </p>\r\n                                            <p>\r\n                                                Category :{' '}<span className=\"badge badge-secondary\">{question.result.category}</span>\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row g-1\">\r\n                                        <div className=\"col-8\"/>\r\n                                        <div className=\"col-1\">\r\n                                            {/* Checking id user has authority to delete the question */}\r\n                                            {!auth.loading && question.result.user._id === auth.user._id && (\r\n                                                    <button onClick={e => Delete(e,question.result._id)} type=\"button\"\r\n                                                            className=\"btn btn-danger\"><AiFillDelete/>\r\n                                                    </button>\r\n                                                    \r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"col-1\">\r\n                                            {/* Checking if the user has authority to edit the question */}\r\n                                            {!auth.loading && question.result.user._id === auth.user._id && (\r\n                                                <Link to={`/update/${question.result._id}`} className=\"btn btn-info\">\r\n                                                    <span ><AiFillEdit/></span>\r\n                                                </Link>\r\n                                            )}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                    <br />\r\n                                </div>\r\n                            </div>\r\n                            {/* Passing the id of the question to AnswerItem component\r\n                             so that it can get the details of answer from get answer by id api */}\r\n                            {\r\n                                loading || answers === null ? <div/> : <AnswerItem GlobalId={GlobalId}/>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : <Spinner />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nQuestionAnswerItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    deleteQuestion: PropTypes.func.isRequired,\r\n    addAnswer: PropTypes.func.isRequired,\r\n    getAnswer: PropTypes.func.isRequired,\r\n    answers: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    answers: state.answers\r\n})\r\n\r\nexport default connect(mapStateToProps, { deleteQuestion, addAnswer, getAnswer})(QuestionAnswerItem)\r\n\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from './Spinner'\r\nimport { getQuestionDiscussion } from '../action/question'\r\nimport QuestionAnswerItem from './QuestionAnswerItem'\r\n\r\nconst QuestionDiscussion = ({ getQuestionDiscussion,match, question: {question, loading} }) => {\r\n\r\n    // Component where all the data of the question will be displayed\r\n    // match.params takes info from the url\r\n    // here we took the id of the question from the url\r\n    useEffect( async ()=>{\r\n        getQuestionDiscussion(match.params.id) \r\n    }, [getQuestionDiscussion])\r\n\r\n    return (\r\n        <div>\r\n            {/* Passing the data of the question to Question Answer component */}\r\n            {\r\n                loading || question === null ? \r\n                <Spinner />\r\n                : <QuestionAnswerItem GlobalId={match.params.id} question={question} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nQuestionDiscussion.propTypes = {\r\n    getQuestionDiscussion: PropTypes.func.isRequired,\r\n    question: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    question: state.question\r\n})\r\n\r\nexport default connect(mapStateToProps, {getQuestionDiscussion})(QuestionDiscussion)\r\n","import React, { Fragment, useState,useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Questions from './Questions';\r\nimport { searchQuestions } from '../action/question';\r\nimport data from '../Data/data.json'\r\nimport './SearchBar.css'\r\nimport Fuse from 'fuse.js'\r\nimport Spinner from './Spinner';\r\n\r\nconst SearchItem = ({ searchQuestions, question: { searchQuestionArr, loading }}) => {\r\n\r\n    const [category, setCategory] = useState('')\r\n\r\n    // initializing variable to use fuzzy\r\n    const fuse = new Fuse(data, {\r\n\t    keys: ['tagName']\r\n    })\r\n\r\n    const [ spinnerToggle, setSpinnerToggle ] = useState(false)\r\n\r\n    // useEffect(() => {\r\n    //     searchQuestions();\r\n    //     console.log(\"call get question\");\r\n    // }, [searchQuestions]);\r\n\r\n    const Submit = e => {\r\n        console.log(\"call submit : \",wordEntered)\r\n        e.preventDefault()\r\n        searchQuestions(wordEntered);\r\n        console.log(\"call get question\");\r\n        setSpinnerToggle(true)\r\n    };\r\n\r\n    // handling fuzzy search\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [wordEntered, setWordEntered] = useState(\"\");\r\n\r\n    const handleFilter = (event) => {\r\n    const searchWord = event.target.value;\r\n    setWordEntered(searchWord);\r\n    // searching input category through fuzzy\r\n    const result = fuse.search(searchWord)\r\n    // mapping result from search so that it can be displayed in the list\r\n    const characterResults = result.map(character => character.item.tagName)\r\n\r\n    if (searchWord === \"\") {\r\n        setFilteredData([]);\r\n    } else {\r\n        setFilteredData(characterResults);\r\n    }\r\n    };\r\n\r\n    return (\r\n    <div className=\"container-fluid align-items-center\">\r\n        <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col-4\">\r\n                <h1 className=\"large text-primary\">Enter Category</h1>\r\n                <br/>\r\n                <form className=\"\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search\"\r\n                        value={wordEntered}\r\n                        onChange={handleFilter}\r\n                        className=\"form-control\"\r\n                    />\r\n                    <br/>\r\n                    <button className=\"btn btn-primary\" disabled={wordEntered.length === 0 ? 'disabled':''} onClick={e => Submit(e)}>Search</button>\r\n                    {/* <div className=\"searchIcon\">\r\n                        {filteredData.length === 0 ? (\r\n                        <p>Search</p>\r\n                        ) : (\r\n                        <button onClick={clearInput}>Clear</button>\r\n                        )} \r\n                    </div>*/}\r\n                </form>\r\n                \r\n            </div>\r\n            <div className=\"col-4\">\r\n                {filteredData.length != 0 && (\r\n                    <div className=\"dataResult\">\r\n                    {filteredData.slice(0, 25).map((value, key) => {\r\n                        return (\r\n                        <div className=\"dataItem\" onClick={()=>setWordEntered(value)} >\r\n                            <p>{value}</p>\r\n                        </div>\r\n                        );\r\n                    })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"col-2\"></div>\r\n        </div>\r\n        <div >\r\n            { spinnerToggle && (loading || searchQuestionArr === []) ? <Spinner/> : searchQuestionArr.map((question) => (\r\n                <Questions key={question._id} question={question} />\r\n            ))}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nSearchItem.propTypes = {\r\n    searchQuestions: PropTypes.func.isRequired,\r\n    question: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    question: state.question\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchQuestions })(SearchItem);","import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport {connect} from 'react-redux'\r\nimport { updateQuestion, getQuestionDiscussion } from '../action/question'\r\nimport PropTypes from 'prop-types'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'\r\n\r\nconst UpdateQuestion = ({updateQuestion, question: {question}, getQuestionDiscussion, match}) => {\r\n\r\n    useEffect(()=>{\r\n        getQuestionDiscussion(match.params.id)\r\n    }, [getQuestionDiscussion])\r\n\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        description:\"\",\r\n        tags:\"\",\r\n        category:\"\"\r\n    })\r\n\r\n    var tagList = \"\"\r\n    question.result.tags.map((tag) => (\r\n        tagList += tag + \", \"\r\n    ))\r\n\r\n    const [image,setImage] = useState()\r\n    const [title, setQuestion] = useState(question.result.title)\r\n    const [description, setDescription] = useState(question.result.description)\r\n    const [category, setCategory] = useState(question.result.category)\r\n    const [tags, setTag] = useState(tagList)\r\n\r\n    const onChangeCategory = e => setCategory(e.target.value)\r\n\r\n    const onChangeTag = e => setTag(e.target.value)\r\n\r\n    useEffect(() => {\r\n        setFormData({...formData,\"title\":title,\"description\":description,\"category\":category,\"tags\":tags})\r\n    }, [title,description,category,tags])\r\n\r\n    const history = useHistory()\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        //setFormData({...formData,\"text\"[title})\r\n        \r\n        const data = new FormData();\r\n        data.append(\"title\",formData.title)\r\n        data.append(\"description\",formData.description)\r\n        data.append(\"tags\",formData.tags)\r\n        data.append(\"category\",formData.category)\r\n        data.append(\"media\",image);\r\n\r\n        // Redirecting to the question after updating\r\n        updateQuestion(match.params.id,data)\r\n        history.push(`/question/${match.params.id}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-3\"></div>\r\n            <div className=\"col-6\">\r\n                <br/><br/>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={e => onSubmit(e)} id=\"add-post-form\" encType=\"multipart/form-data\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"mb-3\">\r\n                                    <label for=\"formFile\" className=\"form-label\">Add Image</label>\r\n                                    <input onChange={e => {\r\n                                        const file = e.target.files[0];\r\n                                        setImage(file);\r\n                                    }\r\n                                    } className=\"form-control\" type=\"file\" id=\"image\"></input>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label>Question</label>\r\n                                    <small>(Max 200 words)</small>\r\n                                    {/* <textarea onChange={e => onChange(e)} className=\"form-control\" id=\"text\" rows=\"3\"></textarea> */}\r\n                                    <ReactQuill theme=\"snow\" value ={title} onChange={setQuestion}/>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label>Description</label>\r\n                                    <small>(Max 200 words)</small>\r\n                                    {/* <textarea onChange={e => onChange(e)} className=\"form-control\" id=\"text\" rows=\"3\"></textarea> */}\r\n                                    <ReactQuill theme=\"snow\" value = {description} onChange={setDescription}/>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                <label>Add Tags</label>\r\n                                <small>(Please don't add more than 30 tags)</small>\r\n                                <textarea onChange={e => onChangeTag(e)} value={tags} className=\"form-control\" id=\"tags\" rows=\"3\"></textarea>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                <label>Add Category</label>\r\n                                <textarea onChange={e=>onChangeCategory(e)} value={category} className=\"form-control\" id=\"category\" rows=\"3\"></textarea>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nUpdateQuestion.propTypes = {\r\n    updateQuestion: PropTypes.func.isRequired,\r\n    getQuestionDiscussion: PropTypes.func.isRequired,\r\n    question: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    question: state.question\r\n})\r\n\r\nexport default connect(mapStateToProps, {updateQuestion, getQuestionDiscussion})(UpdateQuestion)","import {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {getCurrentProfile, getProfileById} from '../action/profile'\r\nimport React, {Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Spinner from './Spinner'\r\nimport ProfileExperience from '../components/ProfileExperience'\r\nimport { GrUpdate, GrUserExpert } from 'react-icons/gr'\r\nimport { MdWork } from 'react-icons/md'\r\nimport { FaGithub, FaLinkedin, FaTwitter } from 'react-icons/fa'\r\nimport { RiProfileLine, RiErrorWarningLine } from 'react-icons/ri'\r\nimport { CgProfile } from 'react-icons/cg'\r\n\r\nconst ProfileInfo = ({getProfileById,match,profile: {profile}, auth }) => {\r\n\r\n    useEffect(() => {\r\n        getProfileById(match.params.id)\r\n    }, [getProfileById])\r\n\r\n    // const {githubusername, linkedIn, twitter, bio, skills} = profile;\r\n\r\n    return ( profile ? \r\n    <Fragment>\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\"/>\r\n                <div className=\"col-6 card shadow p-3 mb-5 bg-light rounded\">\r\n\r\n                    <br/>\r\n                    <h4><CgProfile/> {profile[\"user\"].name}</h4>\r\n                    <div className=\"form-group card-body\">\r\n                        <h5><RiProfileLine/> Bio</h5>\r\n                        {profile[\"bio\"] ?\r\n                            <p>{profile[\"bio\"]}</p> : <div/>}\r\n                    </div>\r\n                    {profile[\"social\"] ?\r\n                        <div className=\"row card-body\">\r\n                            <div className=\"col\">\r\n                                <h5><FaGithub/> Github</h5>\r\n                                {profile[\"social\"].githubusername ?\r\n                                    <p>{profile[\"social\"].githubusername}</p> : <div/>}\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <h5><FaLinkedin/> Linked In</h5>\r\n                                {profile[\"social\"].linkedIn ?\r\n                                    <p>{profile[\"social\"].linkedIn}</p> : <div/>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <h5><FaTwitter/> Twitter</h5>\r\n                                {profile[\"social\"].twitter ?\r\n                                    <p>{profile[\"social\"].twitter}</p> : <div/>}\r\n                            </div>\r\n                        </div>\r\n                        : <div>No Social contact detail available</div>\r\n                    }\r\n                    <div className=\"form-group card-header\">\r\n                        <h5><GrUserExpert/> Skills</h5>\r\n                        {profile[\"skills\"].map((skill) => (\r\n                            <h5>\r\n                                <span className=\"badge badge-warning\">{skill}</span></h5>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"form-group card-group\">\r\n\r\n                        {profile[\"experience\"].length > 0 ? (\r\n                            <Fragment>\r\n                                <h5>Experience</h5>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Company</th>\r\n                                        <th scope=\"col\">Designation</th>\r\n                                        <th scope=\"col\">Start</th>\r\n                                        <th scope=\"col\">End</th>\r\n                                        <th scope=\"col\">Current</th>\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                    {profile[\"experience\"].map((experience) => (\r\n                                        <ProfileExperience\r\n                                            key={experience._id}\r\n                                            experience={experience}\r\n                                        />\r\n                                    ))}\r\n                                </table>\r\n                            </Fragment>\r\n\r\n                        ) : (\r\n                            <h4>No experience credentials <RiErrorWarningLine/></h4>\r\n                        )}\r\n                    </div>\r\n                    {!auth.loading && profile[\"user\"]._id === auth.user._id && (\r\n                        <div className=\"row card-footer\">\r\n                            <div className=\"col\">\r\n                                <Link to='/update'>\r\n                                    <button type=\"button\" className=\"btn btn-primary\"><span><GrUpdate/></span> Update Profile</button>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <Link to='/addExperience'>\r\n                                    <button className=\"btn btn-primary\"><span><MdWork/></span> Add Experience</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    \r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </Fragment> : <Spinner/>)\r\n\r\n}\r\n\r\nProfileInfo.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProfileById})(ProfileInfo)\r\n","import React, { Fragment, useState,useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Questions from './Questions';\r\nimport { searchSimilarQuestion } from '../action/question';\r\nimport Spinner from './Spinner';\r\n\r\nconst SearchSimilarQuestion = ({ searchSimilarQuestion, question: { similarQuestionArr, loading }}) => {\r\n    // useEffect(() => {\r\n    //     searchSimilarQuestion();\r\n    //     console.log(\"call get post\");\r\n    // }, [searchSimilarQuestion]);\r\n\r\n    const [ spinnerToggle, setSpinnerToggle ] = useState(false)\r\n\r\n    const onSubmit = e => {\r\n        console.log(\"call submit\",topic)\r\n        e.preventDefault()\r\n        searchSimilarQuestion(topic);\r\n        console.log(\"call get post\");\r\n        setSpinnerToggle(true)\r\n    };\r\n\r\n    const [topic, setTopic] = useState({title:''})\r\n\r\n    const onChange = e => setTopic({ ...topic,[e.target.id]: e.target.value })\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-fluid row align-items-center\">\r\n            \r\n                <div className=\"col\">\r\n                <br/>\r\n                <form className=\"bar\" method=\"get\" >\r\n                    <div>\r\n                        <h1 className=\"large text-primary\">Enter Question</h1>\r\n                        <input onChange={e => onChange(e)} type=\"text\" className=\"form-control\" id=\"title\" placeholder=\"Search\" name=\"title\"/>\r\n                        <br/>\r\n                        <button onClick={e => onSubmit(e)} disabled={topic.title.length === 0 ? 'disabled':''} type=\"submit\" className=\"btn btn-primary\" id=\"searchQuery\">Search</button>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n                <div className=\"col\"/>\r\n                <div className=\"col\"/>\r\n            </div>\r\n            <div >\r\n                {spinnerToggle && (loading || similarQuestionArr === []) ? <Spinner/> : \r\n                    similarQuestionArr.map((question) => (\r\n                    <Questions key={question._id} question={question} search={true} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nSearchSimilarQuestion.propTypes = {\r\n    searchSimilarQuestion: PropTypes.func.isRequired,\r\n    question: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    question: state.question\r\n});\r\n\r\nexport default connect(mapStateToProps,{searchSimilarQuestion})(SearchSimilarQuestion)\r\n","import { SET_ALERT , REMOVE_ALERT } from  '../action/types'\r\n\r\nconst initialState = [{\r\n\tid : 1,\r\n\tmsg : '',\r\n\talertType : ''\r\n}]\r\n\r\nexport default function(state = initialState, action){\r\n\tconst { type, payload } = action\r\n\r\n\tswitch(action.type){\r\n\t\tcase SET_ALERT :\r\n\t\t\treturn [...state, payload] ;\r\n\t\tcase REMOVE_ALERT :\r\n\t\t\treturn state.filter(alert => alert.id !== payload);\r\n\t\tdefault :\r\n\t\t\treturn state\r\n\t}\r\n}","import {\r\n    ADD_ANSWER,\r\n    GET_ANSWER,\r\n    LIKE_ANSWER,\r\n    DELETE_ANSWER,\r\n    UPDATE_ANSWER,\r\n    ANSWER_ERROR,\r\n    ADD_COMMENT\r\n} from '../action/types'\r\n\r\nconst initialState = {\r\n    answers: [],\r\n    answer: null,\r\n    loading: true,\r\n    error: {},\r\n    comments : []\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload} = action\r\n    switch( type){\r\n        case UPDATE_ANSWER:\r\n            return {\r\n                ...state,\r\n                answers: state.answers.map((post) => post._id === payload.ansId ? {...payload.data, user:post.user} : post),\r\n                loading: false\r\n            }\r\n        case ADD_ANSWER:\r\n            console.log(\"answers\", state);\r\n            return {\r\n                ...state,\r\n                answers: [payload, ...state.answers],\r\n                loading: false\r\n            }\r\n        case ADD_COMMENT:\r\n            console.log()\r\n            return {\r\n                ...state,\r\n                answers: state.answers.map((post) => post._id === payload.id ? { ...post, comments:payload.data.comments } :post),\r\n                loading: false\r\n            }\r\n        case DELETE_ANSWER:\r\n            return {\r\n                ...state,\r\n                answers: state.answers.filter(post => post._id !== payload),\r\n                loading: false\r\n            }\r\n        case ANSWER_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case LIKE_ANSWER:\r\n            return {\r\n                ...state,\r\n                answers: state.answers.map((post) => post._id === payload.ansId ? { ...post, likeCount:payload.likes.likeCount } :post),\r\n                loading: false \r\n            }\r\n        case GET_ANSWER:\r\n            return {\r\n                ...state,\r\n                answers: payload,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport alert from './alert'\r\nimport auth from './auth'\r\nimport profile from './profile'\r\nimport post from './post'\r\nimport question from './question'\r\nimport answers from './answers'\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post,\r\n    question,\r\n    answers\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from '../reducers'\r\n\r\nconst initialState = {} ;\r\n\r\nconst middleWare = [thunk] ;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleWare))\r\n) ;\r\n\r\nexport default store \r\n\r\n","import React, { useEffect } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst Toast = ({alert}) => {\r\n\r\n    useEffect(()=>{\r\n        if(alert.alertType === 'success'){\r\n            toast.success(`${alert.msg}`,{position:'top-right',autoClose: 3000})\r\n        }\r\n        else if(alert.alertType === 'danger'){\r\n            toast.error(`${alert.msg}`,{position:'top-right',autoClose: 3000})\r\n        }\r\n        else if(alert.alertType === 'warning'){\r\n            toast.warning(`${alert.msg}`,{position:'top-right',autoClose: 3000})\r\n        }\r\n        // else{\r\n        //     toast(`${alert.msg}`,{position:'top-right',autoClose: 3000})\r\n        // }\r\n        \r\n    },[])\r\n    \r\n    return (\r\n        <div>\r\n        <ToastContainer position=\"top-right\" closeOnClick autoClose={3000}/>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Toast","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Toast from './Toast'\r\n\r\nconst Alert = ({ alerts }) => alerts !== null && alerts.map(alert => \r\n    <div key={alert.id}>\r\n        {/* <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n            {alert.msg}\r\n        </div> */}\r\n        <Toast alert={alert}/>\r\n    </div>\r\n    \r\n);\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert)\r\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.js';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Navbar from './components/Navbar'\r\nimport Profile from './components/Profile'\r\nimport AccountDetails from './components/AccountDetails'\r\nimport Feed from './components/Feed'\r\nimport LogIn from './components/LogIn'\r\nimport Register from './components/Register'\r\nimport AddPost from './components/AddPost'\r\nimport PrivateRoute from './components/route/PrivateRoute'\r\nimport AddExperience from './components/AddExperience'\r\nimport ShowProfile from './components/ShowProfile'\r\nimport SearchPost from './components/SearchPost'\r\nimport SearchProfile from './components/SearchProfile'\r\nimport Profiles from './components/Profiles'\r\nimport SearchNew from './components/SearchNew'\r\nimport AskQuestion from './components/AskQuestion'\r\nimport QuestionsFeed from './components/QuestionsFeed'\r\nimport MyQuestions from './components/MyQuestions';\r\nimport QuestionDiscussion from './components/QuestionDiscussion';\r\nimport SearchItem from './components/SearchItem'\r\nimport UpdateQuestion from './components/UpdateQuestion';\r\nimport ProfileInfo from './components/ProfileInfo';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport React , { Fragment, useEffect } from 'react'\r\nimport SearchSimilarQuestion from './components/SearchSimilarQuestion';\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux'\r\nimport store from './components/Store'\r\nimport Alert from './components/Alert'\r\nimport { loadUser } from './action/auth'\r\nimport setAuthToken from './utils/setAuthToken'\r\nimport * as process from \"process\";\r\n\r\n\r\nif (localStorage.token) {\r\n\tsetAuthToken(localStorage.token)\r\n}\r\n\r\nfunction App() {\r\n\r\n\tuseEffect(()=>{\r\n\t\tstore.dispatch(loadUser())\r\n\t}, [])\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Navbar/>\r\n          <Route exact path=\"/\" component={LogIn}/>\r\n          <section className=\"container-fluid\">\r\n            <PrivateRoute exact path=\"/update\" component={AccountDetails}/>\r\n            <PrivateRoute exact path=\"/feed\" component={Feed}/>\r\n            <PrivateRoute exact path=\"/searchPost\" component={SearchPost}/>\r\n            <PrivateRoute exact path=\"/searchProfile\" component={SearchProfile}/>\r\n            <PrivateRoute exact path=\"/showProfile\" component={ShowProfile}/>\r\n            <PrivateRoute exact path=\"/profiles\" component={Profiles}/>\r\n            <Alert />\r\n            <Switch>\r\n              <Route exact path=\"/login\" component={LogIn}/>\r\n              <Route exact path=\"/register\" component={Register}/>\r\n              <PrivateRoute exact path=\"/search\" component={SearchNew}/>\r\n              <PrivateRoute exact path=\"/profile\" component={Profile}/>\r\n              <PrivateRoute exact path=\"/addPost\" component={AddPost}/>\r\n              <PrivateRoute exact path=\"/askQuestion\" component={AskQuestion}/>\r\n              <PrivateRoute exact path=\"/questionsFeed\" component={QuestionsFeed}/>\r\n              <PrivateRoute exact path=\"/myQuestions\" component={MyQuestions}/>\r\n              <PrivateRoute exact path=\"/question/:id\" component={QuestionDiscussion}/>\r\n              <PrivateRoute exact path=\"/update/:id\" component={UpdateQuestion}/>\r\n              <PrivateRoute exact path=\"/profile/:id\" component={ProfileInfo}/>\r\n              <PrivateRoute exact path=\"/searchQuestion\" component={SearchItem}/>\r\n              <PrivateRoute exact path=\"/similarQuestion\" component={SearchSimilarQuestion}/>\r\n              <PrivateRoute exact path=\"/addExperience\" component={AddExperience}/>\r\n            </Switch>\r\n          </section>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry);\r\n\t\t\tgetFID(onPerfEntry);\r\n\t\t\tgetFCP(onPerfEntry);\r\n\t\t\tgetLCP(onPerfEntry);\r\n\t\t\tgetTTFB(onPerfEntry);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}