{"version":3,"sources":["action/types.js","action/alert.js","utils/setAuthToken.js","action/auth.js","components/Navbar.js","action/profile.js","components/Spinner.js","reducers/auth.js","components/ProfileExperience.js","components/Profile.js","reducers/profile.js","components/AccountDetails.js","reducers/post.js","components/Posts.js","action/post.js","components/Feed.js","components/LogIn.js","components/Register.js","components/AddPost.js","components/route/PrivateRoute.js","components/AddExperience.js","components/ShowProfile.js","components/SearchPost.js","components/SearchProfile.js","components/Profiles.js","components/Result.js","components/SearchNew.js","reducers/alert.js","reducers/index.js","components/Store.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","UPDATE_PROFILE","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","CLEAR_PROFILE","ACCOUNT_DELETED","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","SEARCH_POST","SEARCH_PROFILE","SEARCH_QUERY","SEARCH_ERROR","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","console","log","data","Navbar","auth","isAuthenticated","loading","logout","authLinks","className","to","onClick","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","prototype","PropTypes","func","isRequired","object","connect","state","getCurrentProfile","response","status","Spinner","props","role","initialState","getItem","user","ProfileExperience","experience","company","title","from","current","format","date","style","display","justifyContent","alignItems","value","checked","Profile","profile","useEffect","hasOwnProperty","xmlns","width","height","fill","viewBox","d","githubusername","linkedIn","twitter","map","skill","length","scope","_id","profiles","error","searchProfiles","query","skills","bio","createProfile","formData","history","edit","config","post","push","errors","forEach","statusText","useState","github","linked_in","setFormData","displaySocialInputs","toggleSocialInputs","profileData","key","social","Array","isArray","join","onChange","e","target","name","onSubmit","preventDefault","aria-describedby","placeholder","rows","maxLength","posts","searchPostArr","Posts","showActions","addLike","deletePost","image","src","alt","userName","text","tag","likeCount","defaultProps","postId","put","likes","delete","propTypes","getPosts","LogIn","login","email","password","setData","process","NODE_ENV","responseGoogle","method","for","required","buttonText","onSuccess","onFailure","cookiePolicy","REACT_APP_CID","bool","header","body","Register","register","confirmPassword","propType","addPost","setImage","FormData","append","split","item","encType","file","files","Component","component","rest","render","addExperience","toDateDisabled","toggleDisabled","disabled","ShowProfile","searchPosts","topic","setTopic","getProfilesBySkill","getProfiles","dat","udemy","coursera","youtube","blog","related","prerequisites","UdemyData","instructor","rating","href","link","CourseraData","level","YoutubeData","searchQuery","combineReducers","alert","action","filter","setItem","removeItem","repos","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","alerts","App","exact","path","AccountDetails","Feed","SearchPost","SearchProfile","Profiles","SearchNew","AddPost","AddExperience","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5418f902.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\nexport const USER_LOADED = 'USER_LOADED'\r\nexport const AUTH_ERROR = 'AUTH_ERROR'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'\r\nexport const GET_PROFILE = 'GET_PROFILE'\r\nexport const GET_PROFILES = 'GET_PROFILES'\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR'\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE'\r\nexport const CLEAR_PROFILES = 'CLEAR_PROFILES'\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED'\r\nexport const GET_POSTS = 'GET_POSTS'\r\nexport const POST_ERROR = 'POST_ERROR'\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const SEARCH_POST = 'SEARCH_POST'\r\nexport const SEARCH_PROFILE = 'SEARCH_PROFILE'\r\nexport const SEARCH_QUERY = 'SEARCH_QUERY'\r\nexport const SEARCH_ERROR = 'SEARCH_ERROR'","import {v4 as uuid} from 'uuid' ;\r\nimport { SET_ALERT, REMOVE_ALERT } from './types'\r\n\r\nexport const setAlert = (msg, alertType, timeout = 2000) => dispatch => {\r\n    const id  = uuid() ;\r\n    dispatch({\r\n        type : SET_ALERT,\r\n        payload: {msg, alertType, id}\r\n    })\r\n\r\n    setTimeout(() => dispatch({type: REMOVE_ALERT,payload:id}), 2000, timeout)\r\n}","import axios from 'axios'\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token\r\n    }\r\n    else {\r\n        delete axios.defaults.headers.common['x-auth-token']\r\n\r\n    }\r\n}\r\n\r\nexport default setAuthToken","import axios from 'axios'\r\nimport { setAlert } from './alert'\r\nimport {\r\n    REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED,\r\n    AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT,\r\n    CLEAR_PROFILE\r\n} from './types'\r\nimport setAuthToken from '../utils/setAuthToken'\r\n\r\n// Load User\r\n\r\nexport const loadUser = () => async dispatch => {\r\n    if (localStorage.token) {\r\n        setAuthToken(localStorage.token)\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('http://localhost:3000/api/auth')\r\n\r\n        console.log(\"result\",res);\r\n        dispatch ({\r\n            type : USER_LOADED,\r\n            payload : res.data\r\n\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Register User\r\nexport const register = ({name, email, password}) => async dispatch => {\r\n    const config = {\r\n        header: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    // const body = JSON.stringify( {name, email, password} )\r\n    const body = {name, email, password}\r\n\r\n    try {\r\n        const res = await axios.post('http://localhost:3000/api/users', body, config)\r\n\r\n        dispatch ({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loadUser())\r\n    }\r\n    catch(err) {\r\n        const error = err.response.data.errors;\r\n\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch ({\r\n            type: REGISTER_FAIL\r\n\r\n        })\r\n    }\r\n}\r\n\r\n// Log In User\r\nexport const login = ({ email, password}) => async dispatch => {\r\n    const config = {\r\n        header: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    // const body = JSON.stringify( {name, email, password} )\r\n    const body = {email, password}\r\n\r\n    try {\r\n        const res = await axios.post('http://localhost:3000/api/auth', body, config)\r\n        dispatch ({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loadUser())\r\n    }\r\n    catch(err) {\r\n        console.log(\"errror\",err);\r\n        const error = err.response;\r\n        if (error){\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch ({\r\n            type: LOGIN_FAIL\r\n\r\n        })\r\n    }\r\n}\r\n\r\n// Log out\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    })\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}","import { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { logout } from '../action/auth'\r\nimport { Fragment } from 'react'\r\n\r\nconst Navbar = ({ auth: {isAuthenticated, loading}, logout }) => {\r\n\r\n    const authLinks = (\r\n        <ul className=\"navbar-nav mr-auto \">\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/feed\">Feed</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/search\">Learn</Link>\r\n            </li>\r\n            \r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/profile\">Profile</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/addPost\">Add Post</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" onClick={logout} >Log Out</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/searchPost\">Search Post</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/searchProfile\">Search Profile</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/profiles\">Find Devs</Link>\r\n            </li>\r\n        </ul>\r\n    )\r\n\r\n    const guestLinks = (\r\n        <div>\r\n        <ul className=\"navbar-nav mr-auto \">\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/login\">Log In</Link>\r\n            </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\">\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">DevLok</Link>\r\n\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    { !loading && (<Fragment>{ isAuthenticated ? authLinks : guestLinks }</Fragment>) }                   \r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.prototype = {\r\n    logout: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout} )(Navbar)\r\n\r\n","import axios from 'axios'\r\nimport {setAlert} from './alert'\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    ACCOUNT_DELETED,\r\n    GET_PROFILES,\r\n    CLEAR_PROFILE,\r\n    CLEAR_PROFILES, SEARCH_PROFILE, SEARCH_QUERY, SEARCH_ERROR\r\n} from './types'\r\n\r\n// Get current user\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        console.log(\"enter get profile\")\r\n        const res = await axios.get('http://localhost:3000/api/profile/me')\r\n        console.log(\"res\", res)\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        console.log(\"error profile\",err.response)\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response,\r\n                status: err.response\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILES\r\n    })\r\n    try {\r\n        const res = await axios.get('http://localhost:3000/api/profile')\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response,\r\n                status: err.response\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Get profiles by skill filter\r\nexport const getProfilesBySkill = skill => async dispatch => {\r\n    console.log(\"skill in action\", skill);\r\n    try {\r\n        const res = await axios.get(`\r\nhttp://localhost:3000/api/profile/filter/${skill}`)\r\n\r\n        console.log(\"res\",res.data);\r\n        dispatch({\r\n            type: SEARCH_PROFILE,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        console.log(\"err profile filter\",err);\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Get profile by ID\r\n\r\nexport const getProfileById = userId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:3000/api/profile/user/${userId}`)\r\n\r\n        dispatch({\r\n            type: SEARCH_PROFILE,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Create or Update\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        // const {githubusername, linkedIn, twitter, bio, skills} = formData;\r\n        //\r\n        // let skillData = skills.split(',');\r\n        // const body = {githubusername, linkedIn, twitter, bio, skills:skillData};\r\n        console.log(\"form body\", formData)\r\n        const res = await axios.post('http://localhost:3000/api/profile', formData, config)\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'))\r\n\r\n        if (!edit) {\r\n            history.push('./profile')\r\n        }\r\n    } catch (err) {\r\n        const error = err.response.data.errors;\r\n\r\n        if (error) {\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// Add experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        console.log(\"formdata\", formData);\r\n        const res = await axios.put('http://localhost:3000/api/profile/experience', formData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Experience added', 'success'))\r\n\r\n        history.push('/profile')\r\n\r\n    } catch (err) {\r\n        const error = err.response.data.errors;\r\n\r\n        if (error) {\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Education added', 'success'))\r\n\r\n        history.push('/profile')\r\n\r\n    } catch (err) {\r\n        const error = err.response.data.errors;\r\n\r\n        if (error) {\r\n            error.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// Delete experience\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete('api/profile/delete')\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Experience removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n// Delete account and profile\r\nexport const deleteAccount = id => async dispatch => {\r\n    if (window.confirm('Are you sure ?')) {\r\n        try {\r\n            const res = await axios.delete('api/profile')\r\n\r\n            dispatch({\r\n                type: CLEAR_PROFILE\r\n            })\r\n            dispatch({\r\n                type: ACCOUNT_DELETED\r\n            })\r\n\r\n            dispatch(setAlert('ACCOUNT DELETED', ''))\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {msg: err.response.statusText, status: err.response.status}\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const searchQuery = topic => async dispatch => {\r\n    const config = {\r\n        header: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = {topic}\r\n    try {\r\n        console.log(\"enter get search\", body)\r\n        const res = await axios.post('http://localhost:3000/api/skill', body, config)\r\n        console.log(\"res\", res.data)\r\n        dispatch({\r\n            type: SEARCH_QUERY,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SEARCH_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst Spinner = props => {\r\n    console.log(\"spinner\");\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\"></div>\r\n            <div className=\"spinner-border text-success\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"col\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nSpinner.propTypes = {\r\n\r\n}\r\n\r\nexport default Spinner\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from '../action/types'\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload } = action\r\n    switch(type){\r\n        case USER_LOADED :\r\n            return {\r\n                ...state,\r\n                isAuthenticated : true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case REGISTER_SUCCESS :\r\n        case LOGIN_SUCCESS :\r\n            localStorage.setItem('token',payload.token);\r\n            return {\r\n                ...state, ...payload, isAuthenticated: true, loading: false\r\n            }\r\n        case REGISTER_FAIL :\r\n        case AUTH_ERROR :\r\n        case LOGIN_FAIL :\r\n        case LOGOUT :\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state, token: null, isAuthenticated: false, loading:false\r\n            }\r\n        default :\r\n        return state\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({experience: { company, title, to, from, current }}) => {\r\n    return (\r\n\r\n            <tbody>\r\n                <tr>\r\n                    <td><b>{company}</b></td>\r\n                    <td>{title}</td>\r\n                    <td><Moment format=\"YYYY/MM/DD\" date={from}  /></td>\r\n                    <td >{ current ? <td> - </td> : <td> <Moment format=\"YYYY/MM/DD\" date={to}/></td>}</td>\r\n                    <td className=\"form-check\" style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\"\r\n                    }}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" checked={current ? 'checked':''}></input>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n    )\r\n}\r\n\r\nProfileExperience.propTypes = {\r\n    experience: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileExperience\r\n","import {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {getCurrentProfile} from '../action/profile'\r\nimport React, {Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Spinner from './Spinner'\r\nimport Moment from 'react-moment';\r\nimport auth from \"../reducers/auth\";\r\nimport ProfileExperience from '../components/ProfileExperience'\r\n\r\nconst Profile = ({\r\n                     getCurrentProfile,\r\n                     auth: {user},\r\n                     profile: {profile, loading}\r\n                 }) => {\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile()\r\n    }, [])\r\n    console.log(\"profile log:\", profile);\r\n\r\n\r\n    // const {githubusername, linkedIn, twitter, bio, skills} = profile;\r\n\r\n    return (profile === null ? <Spinner/> : !profile.hasOwnProperty(\"msg\") ? (<Fragment>\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\"></div>\r\n                <div className=\"col-6 card shadow p-3 mb-5 bg-light rounded\">\r\n\r\n                    <br/><br/>\r\n                    <div className=\"row card-body\">\r\n                        {profile[\"social\"] ?\r\n                            <Fragment>\r\n                                <div className=\"col\">\r\n                                    <h5>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                             fill=\"currentColor\" className=\"bi bi-github\" viewBox=\"0 0 16 16\">\r\n                                            <path\r\n                                                d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\"/>\r\n                                        </svg>\r\n                                        Github</h5>\r\n                                    {profile[\"social\"].githubusername ?\r\n                                        <p>{profile[\"social\"].githubusername}</p> : <div></div>}\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <h5>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                             fill=\"currentColor\" className=\"bi bi-linkedin\" viewBox=\"0 0 16 16\">\r\n                                            <path\r\n                                                d=\"M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z\"/>\r\n                                        </svg>\r\n                                        Linked In</h5>\r\n                                    {profile[\"social\"].linkedIn ?\r\n                                        <p>{profile[\"social\"].linkedIn}</p> : <div></div>}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <h5>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                             fill=\"currentColor\" className=\"bi bi-twitter\" viewBox=\"0 0 16 16\">\r\n                                            <path\r\n                                                d=\"M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z\"/>\r\n                                        </svg>Twitter</h5>\r\n                                    {profile[\"social\"].twitter ?\r\n                                        <p>{profile[\"social\"].twitter}</p> : <div></div>}\r\n                                </div>\r\n                            </Fragment>\r\n                            : <div></div>}\r\n                    </div>\r\n                    <div className=\"form-group card-body\">\r\n                        <h5>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                                 className=\"bi bi-person-lines-fill\" viewBox=\"0 0 16 16\">\r\n                                <path\r\n                                    d=\"M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-5 6s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zM11 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5zm.5 2.5a.5.5 0 0 0 0 1h4a.5.5 0 0 0 0-1h-4zm2 3a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1h-2zm0 3a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1h-2z\"/>\r\n                            </svg>\r\n                            Bio</h5>\r\n                        {profile[\"bio\"] ?\r\n                            <p>{profile[\"bio\"]}</p> : <div></div>}\r\n                    </div>\r\n                    <div className=\"form-group card-header\">\r\n                        <h5>Skills</h5>\r\n                        {profile[\"skills\"].map((skill) => (\r\n                            <h5>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                                     className=\"bi bi-check2\" viewBox=\"0 0 16 16\">\r\n                                    <path\r\n                                        d=\"M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\"/>\r\n                                </svg>\r\n                                <span className=\"badge badge-warning\">{skill}</span></h5>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"form-group card-group\">\r\n\r\n                        {profile[\"experience\"].length > 0 ? (\r\n                            <Fragment>\r\n                                <h5>Experience</h5>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Company</th>\r\n                                        <th scope=\"col\">Designation</th>\r\n                                        <th scope=\"col\">Start</th>\r\n                                        <th scope=\"col\">End</th>\r\n                                        <th scope=\"col\">Current</th>\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                    {profile[\"experience\"].map((experience) => (\r\n                                        <ProfileExperience\r\n                                            key={experience._id}\r\n                                            experience={experience}\r\n                                        />\r\n                                    ))}\r\n                                </table>\r\n                            </Fragment>\r\n\r\n                        ) : (\r\n                            <h4>No experience credentials</h4>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"row card-footer\">\r\n\r\n                        <div className=\"col\">\r\n                            <Link to='/update'>\r\n                                <button type=\"button\" className=\"btn btn-primary\">Update Profile</button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Link to='/addExperience'>\r\n                                <button className=\"btn btn-primary\">Add Experience</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </Fragment>) : <div>Profile does not exist\r\n        <div className=\"row\">\r\n\r\n            <div className=\"col\">\r\n                <Link to='/update'>\r\n                    <button type=\"button\" className=\"btn btn-primary\">Update Profile</button>\r\n                </Link>\r\n            </div>\r\n            <div className=\"col-10\">\r\n\r\n            </div>\r\n        </div></div>)\r\n\r\n}\r\n\r\nProfile.prototype = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCurrentProfile})(Profile)\r\n","import {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    SEARCH_PROFILE,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE,\r\n    GET_PROFILES,\r\n    SEARCH_QUERY, SEARCH_ERROR\r\n} from \"../action/types\"\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    loading: true,\r\n    error: {},\r\n    searchProfiles: [],\r\n    query: []\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload } = action\r\n    console.log(\"payload\",payload);\r\n    switch(type){\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            }\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            }\r\n        case SEARCH_PROFILE:\r\n            return {\r\n                ...state,\r\n                searchProfiles: payload,\r\n                loading: false\r\n            }\r\n        case PROFILE_ERROR:\r\n        case SEARCH_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            }\r\n        case SEARCH_QUERY:\r\n            return {\r\n                ...state,\r\n                query: payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { useState, useEffect } from 'react'\r\nimport { createProfile, getCurrentProfile } from '../action/profile'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport profile from '../reducers/profile'\r\nimport { loadUser } from '../action/auth'\r\n\r\n\r\nconst initialState = {\r\n    company: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    linkedIn: ''\r\n};\r\n\r\nconst AccountDetails = ({ profile:{profile, loading} ,createProfile, getCurrentProfile, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        github: '',\r\n        linked_in:'',\r\n        twitter:'',\r\n        bio:'',\r\n        skills:''\r\n    })\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\r\n\r\n    useEffect( () =>{\r\n        if (!profile) getCurrentProfile();\r\n        if (!loading && profile) {\r\n            const profileData = { ...initialState };\r\n            for (const key in profile) {\r\n                if (key in profileData) profileData[key] = profile[key];\r\n            }\r\n            for (const key in profile.social) {\r\n                if (key in profileData) profileData[key] = profile.social[key];\r\n            }\r\n            if (Array.isArray(profileData.skills))\r\n                profileData.skills = profileData.skills.join(', ');\r\n            setFormData(profileData);\r\n        }\r\n    }, [loading, getCurrentProfile, profile]);\r\n\r\n    const {\r\n        company,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        linkedIn\r\n    } = formData;\r\n\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(\"changed data\",formData);\r\n        createProfile(formData, history, profile ? true : false);\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\"></div>\r\n                <div className=\"col-6\">\r\n                    <form onSubmit={onSubmit}>\r\n                        <br/><br/>\r\n                        <div className=\"row\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={()=>toggleSocialInputs(!displaySocialInputs)}>Add Social</button>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            { displaySocialInputs &&( <div>\r\n                                <br />\r\n                                <div className=\"col\">\r\n                                    <label>Github</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"githubusername\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" onChange={e => onChange(e)} value={githubusername}></input>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <label>Linked In</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"linkedIn\" placeholder=\"Password\" onChange={e => onChange(e)} value={linkedIn}></input>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <label>Twitter</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"twitter\" placeholder=\"Password\" onChange={e => onChange(e)} value={twitter}></input>\r\n                                </div>\r\n                                </div>)}\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"form-group\">\r\n                            <label >Bio</label>\r\n                            <textarea name=\"bio\" className=\"form-control\" rows=\"5\" maxLength=\"200\" onChange={e => onChange(e)} value={bio}></textarea>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label >Skills</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"skills\" placeholder=\"Password\" onChange={e => onChange(e)} value={skills}></input>\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                        <Link className=\"btn btn-light my-1\" to=\"/profile\">\r\n                            Go Back\r\n                        </Link>\r\n                        {/*<button type=\"submit\" className=\"btn btn-primary\"><Link to='/profile'>Submit</Link></button>*/}\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nAccountDetails.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n    AccountDetails\r\n);","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    SEARCH_POST, SEARCH_QUERY, SEARCH_ERROR\r\n} from '../action/types'\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {},\r\n    searchPostArr: [],\r\n    query: []\r\n\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload} = action\r\n    switch( type){\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            }\r\n        case ADD_POST:\r\n            console.log(\"posts\", state);\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts],\r\n                loading: false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload),\r\n                loading: false\r\n            }\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case SEARCH_POST:\r\n            return {\r\n                ...state,\r\n                searchPostArr: payload,\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((post) => post._id === payload.postId ? { ...post,likes: payload.likes, likeCount:payload.likes.length } :post),\r\n                loading: false \r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {addLike, deletePost} from '../action/post'\r\nimport post from \"../reducers/post\";\r\n\r\nconst Posts = ({addLike, deletePost, auth, post}, showActions) => {\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <br/>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n                <div className=\"card mb-3 col-8\">\r\n                    <div className=\"row g-0\">\r\n                        <div className=\"col-md-4 mb-3\">\r\n                            {post.image ?\r\n                                <img width=\"300\" height=\"300\"\r\n                                     src={post.image}\r\n                                    // src=\"https://media.wired.com/photos/5e59a85635982c0009f6eb8a/1:1/w_1350,h_1350,c_limit/python-popularity.jpg\"\r\n                                     alt=\"...\"></img>\r\n                                : <img width=\"300\" height=\"300\"\r\n                                       // src={post.image}\r\n                                    src=\"https://media.wired.com/photos/5e59a85635982c0009f6eb8a/1:1/w_1350,h_1350,c_limit/python-popularity.jpg\"\r\n                                       alt=\"...\"></img>\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"row g-0\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">{post.userName}</h5>\r\n                                    <p className=\"card-text\">{post.text}</p>\r\n                                    <div>\r\n                                        {post.title.map((tag) => (\r\n                                            <span className=\"badge badge-secondary\">{tag}</span>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {showActions && (\r\n                                <div className=\"row g-1\">\r\n                                    <div className=\"col-9\"></div>\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"card-body\">\r\n                                            <button onClick={e => addLike(post._id)} type=\"button\" className=\"btn btn-primary\">\r\n                                            {/*<button onClick={e => addLikeNew(post._id)} type=\"button\" className=\"btn btn-primary\">*/}\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                                     fill=\"currentColor\" className=\"bi bi-hand-thumbs-up-fill\"\r\n                                                     viewBox=\"0 0 16 16\">\r\n                                                    <path\r\n                                                        d=\"M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a9.84 9.84 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733.058.119.103.242.138.363.077.27.113.567.113.856 0 .289-.036.586-.113.856-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.163 3.163 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16H8c-.605 0-1.07-.081-1.466-.218a4.82 4.82 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z\"/>\r\n                                                </svg>\r\n                                                Like <span className=\"badge bg-secondary\">{post.likeCount }</span>\r\n                                            </button>\r\n                                        </div>\r\n                                        {!auth.loading && post.user === auth.user._id && (\r\n                                            <div className=\"card-body\">\r\n                                                <button onClick={() => deletePost(post._id)} type=\"button\"\r\n                                                        className=\"btn btn-danger\">Delete\r\n                                                </button>\r\n                                            </div>\r\n                                        )}\r\n\r\n                                    </div>\r\n                                </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPosts.defaultProps = {\r\n    showActions: true\r\n};\r\n\r\nPosts.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired,\r\n    showActions: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {addLike, deletePost})(Posts)","import axios from 'axios'\r\nimport { setAlert } from './alert'\r\n\r\nimport {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    SEARCH_POST\r\n} from './types'\r\n\r\n// Get Posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('http://localhost:3000/api/posts')\r\n        console.log(\"res posts ui\", res);\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n    }\r\n}\r\n\r\n// Search Post\r\nexport const searchPosts = (topic) => async dispatch => {\r\n    console.log(\"search post\")\r\n    const config = {\r\n        header: {'Content-Type': 'multipart/form-data'}\r\n    }\r\n    // const tags = topic.title.split(',')\r\n    // const body = {title:tags}\r\n    try {\r\n        console.log( \"text body 1\",topic.title);\r\n        const res = await axios.get(`http://localhost:3000/api/posts/filter/${topic.title}`, config)\r\n        console.log(\"result filter\",res)\r\n        dispatch({\r\n            type: SEARCH_POST,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(\"error add post dispatch\",err);\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,\r\n                status: err.response}\r\n        })\r\n    }\r\n}\r\n\r\n// Add Like\r\nexport const addLike = postId => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`http://localhost:3000/api/posts/like/${postId}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { postId, likes: res.data  }\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(\"error like\", err);\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n    }\r\n}\r\n\r\n// Delete  post\r\nexport const deletePost = postId => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`http://localhost:3000/api/posts/${postId}`)\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: postId\r\n        })\r\n\r\n        // dispatch(setAlert('Post removed','success'))\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n    }\r\n}\r\n\r\n// Add  post\r\nexport const addPost = (data) => async dispatch => {\r\n    const config = {\r\n        header: {'Content-Type': 'multipart/form-data'}\r\n    }\r\n    try {\r\n        // console.log( \"text body\",body);\r\n        const res = await axios.post('http://localhost:3000/api/posts', data, config)\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        })\r\n        console.log(\"after dispatch\")\r\n        dispatch(setAlert('Post Created','success'))\r\n\r\n    } catch (err) {\r\n        console.log(\"error add post dispatch\",err);\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response,\r\n            status: err.response}\r\n        })\r\n    }\r\n}","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Posts from './Posts';\r\nimport { getPosts } from '../action/post';\r\n\r\nconst Feeds = ({ getPosts, post: { posts } }) => {\r\n    useEffect(() => {\r\n        getPosts();\r\n        console.log(\"call get post\");\r\n    }, [getPosts]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Posts</h1>\r\n            <div >\r\n                {posts.map((post) => (\r\n                    <Posts key={post._id} post={post} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Feeds);","import { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { login } from '../action/auth'\r\nimport  { useState, useEffect } from 'react'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport * as process from \"process\";\r\n\r\nconst LogIn = ({ login, isAuthenticated }) => {\r\n\r\n    const [formData, setData] = useState({\r\n        email : '',\r\n        password : ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        console.log(\"env var node \",process.env.NODE_ENV);\r\n    });\r\n\r\n    const { email , password} = formData\r\n\r\n    const onChange = e => setData({...formData, [e.target.name]: e.target.value })\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        login({email, password})\r\n    }\r\n\r\n    // Redirect if logged in\r\n\r\n    if(isAuthenticated){\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    const responseGoogle = (response) => {\r\n        console.log(response);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\"></div>\r\n            <div className=\"col\">\r\n            <br/><br/>\r\n            <section className=\"search-bar\">\r\n                <form className=\"bar\" role=\"form\" method=\"post\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <h1>Log In</h1><br/>\r\n                        <label for=\"exampleInputEmail1\">Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" required=\"\"\r\n                            name=\"email\" onChange={e => onChange(e)}></input>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Password</label>\r\n                        <input onChange={e => onChange(e)} type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" name=\"password\"></input>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n                </form>\r\n                <GoogleLogin\r\n                    // clientId={process.env.REACT_APP_CID}\r\n                    buttonText=\"Login\"\r\n                    onSuccess={responseGoogle}\r\n                    onFailure={responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n                <h1>\r\n                    <p>{\"id\"}</p>\r\n                    {process.env.REACT_APP_CID}\r\n                    {console.log(\"id\",process.env.NODE_ENV)}\r\n                </h1>\r\n\r\n                </section>\r\n            </div>\r\n            <div className=\"col\"></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nLogIn.prototype = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(LogIn)\r\n","import { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setAlert } from '../action/alert'\r\nimport { register } from '../action/auth'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n\r\n    const [formData, setData] = useState({\r\n        name : '',\r\n        email : '',\r\n        password : '',\r\n        confirmPassword : ''\r\n    })\r\n\r\n    const { name, email , password , confirmPassword } = formData\r\n\r\n    const onChange = e => setData({...formData, [e.target.name]: e.target.value })\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword){\r\n            setAlert('Password does not match','danger')\r\n        }\r\n        else {\r\n            console.log(\"ui name\", name);\r\n            register({name, email, password})\r\n        }\r\n    }\r\n\r\n    if (isAuthenticated){\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\"></div>\r\n            <div className=\"col\">\r\n                <br/><br/>\r\n                <section className=\"search-bar\">\r\n\r\n                    <form className=\"bar\"  onSubmit={e => onSubmit(e)} role=\"form\" method=\"post\">\r\n                        <div className=\"form-group\">\r\n                            <h1>Register</h1><br/>\r\n                            <label for=\"exampleInputEmail1\">Email address</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                                   name=\"email\" onChange={e => onChange(e)}></input>\r\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"exampleInputEmail1\">Name</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                                   name=\"name\" onChange={e => onChange(e)}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"exampleInputPassword1\">Password</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\r\n                                   name=\"password\" onChange={e => onChange(e)}></input>\r\n\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"exampleInputPassword1\">Confirm Password</label>\r\n                            <input type=\"password\" className=\"form-control\"\r\n                                   name=\"confirmPassword\" onChange={e => onChange(e)}></input>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n\r\n                    </form>\r\n\r\n                </section>\r\n            </div>\r\n            <div className=\"col\"></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nRegister.propType = {\r\n    setAlert : PropTypes.func.isRequired,\r\n    register : PropTypes.func.isRequired,\r\n    isAuthenticated : PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register)\r\n","import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { addPost } from '../action/post'\r\nimport PropTypes from 'prop-types'\r\nimport Axios from 'axios'\r\n\r\nconst AddPost = ({addPost}) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        text: '',\r\n        title:\"\"\r\n    })\r\n    const [image,setImage] = useState()\r\n\r\n    const {text,title} = formData\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.id] : e.target.value})\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        const data = new FormData();\r\n        data.append(\"text\",formData.text);\r\n        const tags = formData.title.split(',')\r\n        tags.forEach(item => {\r\n            data.append(\r\n                \"title\",item\r\n            ); });\r\n        data.append(\"image\",image);\r\n\r\n        // Axios.post(\"https://httpbin.org/anything\",data)\r\n        //     .then(res =>console.log(\"res\",res))\r\n        //     .catch(err =>console.log(\"err\",err))\r\n        console.log(\"buffer\",data);\r\n        addPost(data)\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-3\"></div>\r\n            <div className=\"col-6\">\r\n                <br/><br/>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={e => onSubmit(e)} id=\"add-post-form\" encType=\"multipart/form-data\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"mb-3\">\r\n                                    <label for=\"formFile\" className=\"form-label\">Add Image</label>\r\n                                    <input onChange={e => {\r\n                                        const file = e.target.files[0];\r\n                                        setImage(file);\r\n                                    }\r\n                                    } className=\"form-control\" type=\"file\" id=\"image\"></input>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label>Add Caption</label>\r\n                                    <small>(Max 200 words)</small>\r\n                                    <textarea onChange={e => onChange(e)} className=\"form-control\" id=\"text\" rows=\"3\"></textarea>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                <label>Add Tags</label>\r\n                                <small>(Please don't add more than 30 tags)</small>\r\n                                <textarea onChange={e => onChange(e)} className=\"form-control\" id=\"title\" rows=\"3\"></textarea>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Post</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nAddPost.propTypes = {\r\n    addPost: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {addPost})(AddPost)\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../Spinner';\r\n\r\nconst PrivateRoute = ({\r\n                          component: Component,\r\n                          auth: { isAuthenticated, loading },\r\n                          ...rest\r\n                      }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            loading ? (\r\n                <Spinner />\r\n            ) : isAuthenticated ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { addExperience } from '../action/profile'\r\n\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        title: '',\r\n        from: '',\r\n        to: '',\r\n        current: false\r\n    })\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false)\r\n\r\n    const { company, title, from, to, current } = formData\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.id]: e.target.value})\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(\"data\",formData);\r\n        addExperience(formData, history)\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-3\"></div>\r\n            <div className=\"col-6\">\r\n                <br/>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={e => onSubmit(e)}>\r\n                            <div className=\"form-group\">\r\n                                <h2>Add Experience</h2>\r\n                                <label>Company</label>\r\n                                <input onChange={e => onChange(e)} type=\"text\" className=\"form-control\"  id=\"company\"></input>\r\n                                <br/>\r\n                                <label>Designation</label>\r\n                                <input onChange={e => onChange(e)} type=\"text\" className=\"form-control\"  id=\"title\"></input>\r\n                                <br/>\r\n                                <label>Current Job</label>\r\n                                <br />\r\n                                <input type=\"checkbox\" className=\"\" checked={current} id=\"current\" onChange={e => {\r\n                                    setFormData({...formData, current: !current})\r\n                                    toggleDisabled(!toDateDisabled)\r\n                                }} />\r\n                                <br/>\r\n                                <label >Start</label>\r\n                                <input onChange={e => onChange(e)} type=\"date\" className=\"form-control\"  id=\"from\"></input>\r\n                                <br/>\r\n                                <label >End</label>\r\n                                <input onChange={e => onChange(e)} type=\"date\" className=\"form-control\"  id=\"to\" disabled={toDateDisabled ? 'disabled':''}></input>\r\n                                <br/>\r\n                                \r\n                                <button type=\"submit\" className=\"btn btn-primary\">Add</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {addExperience})(AddExperience)\r\n","import {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport React, {Fragment, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Spinner from './Spinner'\r\nimport auth from \"../reducers/auth\";\r\nimport ProfileExperience from '../components/ProfileExperience'\r\nimport Moment from \"react-moment\";\r\n\r\nconst ShowProfile = ({\r\n                         auth,\r\n                         profile: {social, skills, _id, user, bio, experience, date}\r\n                     }) => {\r\n\r\n    console.log(\"profile show\", social, skills, _id);\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\"></div>\r\n                <div className=\"col-6 card shadow p-3 mb-5 bg-light rounded\">\r\n\r\n                    <br/><br/>\r\n                    {social ?\r\n                    <div className=\"row card-body \">\r\n                        <div className=\"col\">\r\n                            <h5>Github</h5>\r\n                            {social.githubusername ?\r\n                                <p>{social.githubusername}</p> : <div></div>}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <h5>Linked In</h5>\r\n                            {social.linkedIn ?\r\n                                <p>{social.linkedIn}</p> : <div></div>}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <h5>Twitter</h5>\r\n                            {social.twitter ?\r\n                                <p>{social.twitter}</p> : <div></div>}\r\n                        </div>\r\n                    </div>:<div></div>}\r\n                    <div className=\"form-group\">\r\n                        <h5>Bio</h5>\r\n                        {bio ?\r\n                            <p>{bio}</p> : <div></div>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h5>Skills</h5>\r\n                        {skills.map((skill) => (\r\n                            <h3><span className=\"badge badge-info\">{skill}</span></h3>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <button type=\"button\" className=\"btn btn-primary\"\r\n                                    onClick={() => toggleSocialInputs(!displaySocialInputs)}>Learn More\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col\"></div>\r\n                        <div className=\"col\"></div>\r\n                    </div>\r\n                    <br/>\r\n                    {displaySocialInputs && (\r\n                        <div className=\"form-group\">\r\n                            <br/>\r\n                                {experience.length > 0 ? (\r\n                                    <Fragment>\r\n                                        <h5>Experience</h5>\r\n                                        <table className=\"table\">\r\n                                            <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">Company</th>\r\n                                                <th scope=\"col\">Designation</th>\r\n                                                <th scope=\"col\">Start</th>\r\n                                                <th scope=\"col\">End</th>\r\n                                                <th scope=\"col\">Current</th>\r\n                                            </tr>\r\n                                            </thead>\r\n\r\n                                        {experience.map((experience) => (\r\n                                            <tbody>\r\n                                            <tr>\r\n                                                <td>{experience.company}</td>\r\n                                                <td>{experience.title}</td>\r\n                                                <td><Moment format=\"YYYY/MM/DD\" date={experience.from}/></td>\r\n                                                <td><Moment format=\"YYYY/MM/DD\" date={experience.to}/></td>\r\n                                                <td className=\"form-check\" style={{\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: \"center\",\r\n                                                    alignItems: \"center\"\r\n                                                }}>\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\"\r\n                                                           id=\"defaultCheck1\"\r\n                                                           checked={experience.current ? 'checked' : ''}></input>\r\n                                                </td>\r\n                                            </tr>\r\n                                            </tbody>\r\n                                        ))}\r\n                                        </table>\r\n                                    </Fragment>\r\n                                ) : (\r\n                                    <h4>No experience credentials</h4>\r\n                                )}\r\n\r\n                        </div>\r\n                    )}\r\n                    {!auth.loading && user._id === auth.user._id && (\r\n                        <div className=\"row\">\r\n                            <br/>\r\n                            <div className=\"col\">\r\n                                <Link to='/addExperience'>\r\n                                    <button className=\"btn btn-primary\">Add Experience</button>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <Link to='/update'>\r\n                                    <button className=\"btn btn-primary\">Update</button>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col\"></div>\r\n                        </div>\r\n                    )}\r\n                    <br/>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nShowProfile.prototype = {\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(ShowProfile)\r\n","import React, { Fragment, useState,useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Posts from './Posts';\r\nimport { searchPosts } from '../action/post';\r\n\r\nconst SearchPost = ({ searchPosts, post: { searchPostArr }}) => {\r\n    useEffect(() => {\r\n        searchPosts();\r\n        console.log(\"call get post\");\r\n    }, [searchPosts]);\r\n\r\n\r\n    const onSubmit = e => {\r\n        console.log(\"call submit\",topic)\r\n        e.preventDefault()\r\n        searchPosts(topic);\r\n        console.log(\"call get post\");\r\n    };\r\n\r\n    const [topic, setTopic] = useState({title:''})\r\n\r\n    const onChange = e => setTopic({ ...topic,[e.target.id]: e.target.value })\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-fluid row align-items-center\">\r\n            \r\n            <div className=\"col\">\r\n            <br/>\r\n            <form className=\"bar\" method=\"get\" >\r\n                <div>\r\n                    <h5>Enter Topic</h5>\r\n                    <input onChange={e => onChange(e)} type=\"text\" className=\"form-control\" id=\"title\" placeholder=\"Search Post\" name=\"title\"></input>\r\n                    <br/>\r\n                    <button onClick={e => onSubmit(e)} type=\"submit\" className=\"btn btn-primary\" id=\"searchQuery\">Search</button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n            <div className=\"col\"></div>\r\n            <div className=\"col\"></div>\r\n        </div>\r\n            <div >\r\n                {searchPostArr.map((post) => (\r\n                    <Posts key={post._id} post={post} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nPosts.propTypes = {\r\n    searchPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchPosts })(SearchPost);","import React, {Fragment, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ShowProfile from './ShowProfile';\r\nimport { getProfilesBySkill } from '../action/profile';\r\n\r\nconst SearchProfile = ({ getProfilesBySkill, profile: { searchProfiles } }) => {\r\n    useEffect(() => {\r\n        getProfilesBySkill();\r\n        console.log(\"call get post\");\r\n    }, [getProfilesBySkill]);\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        getProfilesBySkill(topic.skill);\r\n    };\r\n\r\n    const [topic, setTopic] = useState({skill:''})\r\n\r\n    const onChange = e => setTopic({ ...topic,[e.target.id]: e.target.value })\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-fluid row align-items-center\">\r\n            \r\n            <div className=\"col\">\r\n            <br/>\r\n            <form className=\"bar\" method=\"get\" >\r\n                <div>\r\n                    <h5>Enter Topic</h5>\r\n                    <input onChange={e => onChange(e)} type=\"text\" className=\"form-control\" id=\"skill\" placeholder=\"Search Post\" name=\"query\"></input>\r\n                    <br/>\r\n                    <button onClick={e => onSubmit(e)} type=\"submit\" className=\"btn btn-primary\" id=\"searchQuery\">Search</button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n            <div className=\"col\"></div>\r\n            <div className=\"col\"></div>\r\n        </div>\r\n            <div >\r\n                {searchProfiles.map((profile) => (\r\n                    <ShowProfile key={profile._id} profile={profile} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nSearchProfile.propTypes = {\r\n    getProfilesBySkill: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfilesBySkill })(SearchProfile);","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ShowProfiles from './ShowProfile';\r\nimport { getProfiles } from '../action/profile';\r\nimport ShowProfile from \"./ShowProfile\";\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles } }) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n        console.log(\"call get post\");\r\n    }, [getProfiles]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Profiles</h1>\r\n            <div >\r\n                {profiles.map((profile) => (\r\n                    <ShowProfile key={profile._id} profile={profile} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from './Spinner'\r\n\r\n\r\nconst Result = query => {\r\n    console.log(\"query data\", query)\r\n    if (query.query.data) {\r\n        const dat = query.query.data\r\n        // const dat = query\r\n\r\n        const udemy = dat.udemy\r\n        const coursera = dat.coursera\r\n        const youtube = dat.youtube\r\n\r\n        const blogs = dat.blog\r\n        return (\r\n            <div>\r\n                <section className=\"container-fluid\" id=\"Result\">\r\n\r\n                    <h1>Results</h1> <br/>\r\n                    {query.query.related.length == 0 ? <div></div> :\r\n                        <Fragment>\r\n                            <h2>Related Topics</h2>\r\n                            <div className=\"row\">\r\n                                <ul>{\r\n                                    query.query.related.map((topic) => (\r\n                                        <li className=\"badge badge-info\">{topic}</li>\r\n                                    ))\r\n                                }\r\n                                </ul>\r\n                            </div>\r\n                        </Fragment>}\r\n                    {query.query.prerequisites.length ==0 ? <div></div> :\r\n                        <Fragment>\r\n                            <h2>Prerequisites</h2>\r\n                            <div className=\"row\">\r\n                                {\r\n                                    query.query.prerequisites.map((topic) => (\r\n                                        <span className=\"badge badge-info\">{topic}</span>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </Fragment>\r\n                    }\r\n                    <h2>Udemy</h2><br/>\r\n                    <div className=\"row\">\r\n                        {udemy.map((UdemyData) => (\r\n\r\n                            <div className=\"col\">\r\n                                <div className=\"card\">\r\n                                    <img src={UdemyData.image} className=\"card-img\" alt=\"Best Ever Content!\"\r\n                                         className=\"card-img-top\"\r\n                                         alt=\"...\"></img>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\"></h5>\r\n                                        <p className=\"card-text\">{UdemyData.title}</p>\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item\">Instructor -{UdemyData.instructor} </li>\r\n                                        <li className=\"list-group-item\">Rating -{UdemyData.rating} </li>\r\n                                    </ul>\r\n                                    <div className=\"card-body\">\r\n                                        <a href={UdemyData.link} target=\"_blank\" className=\"card-link\">Learn More</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n\r\n                        }\r\n\r\n                    </div>\r\n                    <br/>\r\n\r\n                    <br/>\r\n                    <h2>Coursera</h2><br/>\r\n                    <div className=\"row\">\r\n                        {coursera.map((CourseraData) => (\r\n                            <div className=\"col\">\r\n                                <div className=\"card\">\r\n                                    <img src={CourseraData.image} className=\"card-img\" alt=\"Best Ever Content!\"\r\n                                         className=\"card-img-top\"\r\n                                         alt=\"...\"></img>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{CourseraData.title}</h5>\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item\">Instructor -{CourseraData.instructor} </li>\r\n                                        <li className=\"list-group-item\">Rating - {CourseraData.rating}</li>\r\n                                        <li className=\"list-group-item\">Level - {CourseraData.level}</li>\r\n                                    </ul>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <a href={CourseraData.link} target=\"_blank\" className=\"card-link\">Learn More</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <br/>\r\n                    <h2>Youtube</h2><br/>\r\n                    <div className=\"row\">\r\n                        {youtube.map((YoutubeData) => (\r\n                            <div className=\"col\">\r\n                                <div className=\"card\">\r\n                                    <img src={YoutubeData.image} className=\"card-img\" alt=\"Best Ever Content!\"\r\n                                         className=\"card-img-top\"\r\n                                         alt=\"...\"></img>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{YoutubeData.title}</h5>\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item\">Instructor -{YoutubeData.instructor} </li>\r\n                                    </ul>\r\n                                    <div className=\"card-body\">\r\n                                        <a href={YoutubeData.link} target=\"_blank\" className=\"card-link\">Learn More</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <br/>\r\n\r\n                </section>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Spinner/>\r\n                <div>Fetching..</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nResult.propTypes = {\r\n    result: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(Result)\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Result from './Result';\r\nimport { searchQuery } from '../action/profile';\r\n\r\n\r\nconst SearchNew = ({ searchQuery, profile: { query, loading } }) => {\r\n\r\n\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\r\n\r\n    useEffect(() => {\r\n        searchQuery();\r\n        console.log(\"quey payload\",query);\r\n    }, [searchQuery]);\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        searchQuery(topic.skill);\r\n        toggleSocialInputs(true)\r\n\r\n    };\r\n\r\n    const [topic, setTopic] = useState({skill:''})\r\n\r\n    const onChange = e => setTopic({ ...topic,[e.target.id]: e.target.value })\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-fluid row align-items-center\">\r\n\r\n                <div className=\"col\">\r\n                    <br/>\r\n                    <form className=\"bar\" method=\"get\" >\r\n                        <div>\r\n                            <h5>Enter Topic</h5>\r\n                            <input onChange={e => onChange(e)} type=\"text\" className=\"form-control\" id=\"skill\" placeholder=\"Search Post\" name=\"query\"></input>\r\n                            <br/>\r\n                            <button disabled={topic.skill==\"\"?true:false} onClick={e => onSubmit(e)} type=\"submit\" className=\"btn btn-primary\" id=\"searchQuery\">Search</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col\"></div>\r\n                <div className=\"col\"></div>\r\n            </div>\r\n            <div >\r\n                { (displaySocialInputs && !loading) ?\r\n                   <Result query={query}/>\r\n                    : <div></div>\r\n\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nSearchNew.propTypes = {\r\n    searchQuery: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    loading: state.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchQuery })(SearchNew);","import { SET_ALERT , REMOVE_ALERT } from  '../action/types'\r\n\r\nconst initialState = [{\r\n    id : 1,\r\n    msg : '',\r\n    alertType : ''\r\n}]\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload } = action\r\n\r\n    switch(action.type){\r\n        case SET_ALERT :\r\n            return [...state, payload] ;\r\n        case REMOVE_ALERT :\r\n            return state.filter(alert => alert.id !== payload);\r\n        default :\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport alert from './alert'\r\nimport auth from './auth'\r\nimport profile from './profile'\r\nimport post from './post'\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from '../reducers'\r\n\r\nconst initialState = {} ;\r\n\r\nconst middleWare = [thunk] ;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleWare))\r\n) ;\r\n\r\nexport default store \r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Alert = ({ alerts }) => alerts !== null && alerts.map(alert => \r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n        {alert.msg}\r\n    </div>\r\n);\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert)\r\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.js';\r\nimport Navbar from './components/Navbar'\r\nimport Profile from './components/Profile'\r\nimport AccountDetails from './components/AccountDetails'\r\nimport Feed from './components/Feed'\r\nimport LogIn from './components/LogIn'\r\nimport Register from './components/Register'\r\nimport AddPost from './components/AddPost'\r\nimport PrivateRoute from './components/route/PrivateRoute'\r\nimport AddExperience from './components/AddExperience'\r\nimport ShowProfile from './components/ShowProfile'\r\nimport SearchPost from './components/SearchPost'\r\nimport SearchProfile from './components/SearchProfile'\r\nimport Profiles from './components/Profiles'\r\nimport SearchNew from './components/SearchNew'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport React , { Fragment, useEffect } from 'react'\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux'\r\nimport store from './components/Store'\r\nimport Alert from './components/Alert'\r\nimport { loadUser } from './action/auth'\r\nimport setAuthToken from './utils/setAuthToken'\r\nimport { addExperience } from './action/profile'\r\nimport * as process from \"process\";\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token)\r\n}\r\n\r\nfunction App() {\r\n\r\n  useEffect(()=>{\r\n    store.dispatch(loadUser())\r\n  }, [])\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Navbar/>\r\n          <Route exact path=\"/\" component={LogIn}/>\r\n          <section className=\"container-fluid\">\r\n            <PrivateRoute exact path=\"/update\" component={AccountDetails}/>\r\n            <PrivateRoute exact path=\"/feed\" component={Feed}/>\r\n            <PrivateRoute exact path=\"/searchPost\" component={SearchPost}/>\r\n            <PrivateRoute exact path=\"/searchProfile\" component={SearchProfile}/>\r\n            <PrivateRoute exact path=\"/showProfile\" component={ShowProfile}/>\r\n            <PrivateRoute exact path=\"/profiles\" component={Profiles}/>\r\n            <Alert />\r\n            <Switch>\r\n              <Route exact path=\"/login\" component={LogIn}/>\r\n              <Route exact path=\"/register\" component={Register}/>\r\n              <PrivateRoute exact path=\"/search\" component={SearchNew}/>\r\n              <PrivateRoute exact path=\"/profile\" component={Profile}/>\r\n              <PrivateRoute exact path=\"/addPost\" component={AddPost}/>\r\n              <PrivateRoute exact path=\"/addExperience\" component={AddExperience}/>\r\n            </Switch>\r\n          </section>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}