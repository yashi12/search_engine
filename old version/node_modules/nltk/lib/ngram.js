function ngram(N) {
  this.enum = function(s) {
    var ret = [];
    for (var i=0; i<s.length-N+1; ++i) {
      ret.push(s.slice(i, i+N));
    }
    return ret;
  };
  this.sim = function(s, t) {
    var ls1 = this.enum(s),
        ls2 = this.enum(t);
    var x1 = norm(ls1),
        x2 = norm(ls2);

    var cos = 0;
    for (var t in x1) {
      if (t in x2) cos += x1[t] * x2[t];
    }
    if (cos > 1) cos = 1;
    return cos;

    function norm(ls) {
      var o = {};
      for (var i=0; i<ls.length; ++i) {
        var t = ls[i];
        if (t in o) o[t]++; else o[t] = 1;
      }
      var sq = 0;
      for (var k in o) sq += Math.pow(o[k], 2);
      sq = Math.sqrt(sq);
      for (var k in o) o[k] /= sq;
      return o;
    }
  };
};
module.exports = ngram;
